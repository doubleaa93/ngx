{"version":3,"file":"de-re-crud-ngx.umd.js.map","sources":["ng://@de-re-crud/ngx/src/app/core/hosts/component-host.directive.ts",null,"ng://@de-re-crud/ngx/src/app/providers/provider/provider.service.ts","ng://@de-re-crud/ngx/src/app/core/validators/whitespace-validator.ts","ng://@de-re-crud/ngx/src/app/core/services/form-builder.service.ts","ng://@de-re-crud/ngx/src/app/core/services/form-state.service.ts","ng://@de-re-crud/ngx/src/app/core/hosts/collection-field-host.component.ts","ng://@de-re-crud/ngx/src/app/core/hosts/input-field-host.component.ts","ng://@de-re-crud/ngx/src/app/core/hosts/button-host.component.ts","ng://@de-re-crud/ngx/src/app/core/hosts/stamp-field-host.component.ts","ng://@de-re-crud/ngx/src/app/core/hosts/form-host/form-host.component.ts","ng://@de-re-crud/ngx/src/app/core/core.module.ts","ng://@de-re-crud/ngx/src/app/forms/form/form.component.ts","ng://@de-re-crud/ngx/src/app/forms/forms.module.ts","ng://@de-re-crud/ngx/src/app/core/validation-error-helper.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/control-container-renderer/control-container-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/provider/provider.module.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/input-renderer/input-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/select-renderer/select-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/label-renderer/label-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/button-renderer/button-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/table-renderer/table-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/checkbox-renderer/checkbox-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/help-renderer/help-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/validation-errors-renderer/validation-errors-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/inline-renderer/inline-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/stamp-renderer/stamp-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/bootstrap3.module.ts"],"sourcesContent":["import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[deReCrudComponentHost]'\r\n})\r\nexport class ComponentHostDirective {\r\n  constructor(public viewContainerRef: ViewContainerRef) {}\r\n}\r\n\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DeReCrudProviderOptions } from './provider-options';\r\n\r\n@Injectable()\r\nexport class DeReCrudProviderService {\r\n  private _cache: { [name: string]: DeReCrudProviderOptions } = {};\r\n\r\n  register(name: string, options: DeReCrudProviderOptions) {\r\n    this._cache[name] = options;\r\n  }\r\n\r\n  get(name: string): DeReCrudProviderOptions {\r\n    const options = this._cache[name];\r\n    if (!options) {\r\n      throw new Error(`Provider '${name}' is not registered. Make sure register(name, options) is called in the applicatio root.`);\r\n    }\r\n\r\n    return options;\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport const whitespaceValidator = (control: AbstractControl) => {\r\n  const isWhiteSpace = (control.value || '').trim().length === 0;\r\n\r\n  return !isWhiteSpace ? null : { required: true };\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray\r\n} from '@angular/forms';\r\nimport {\r\n  IField,\r\n  ITextField,\r\n  ILinkedStructField,\r\n  IBlock,\r\n  IIntegerField,\r\n  IFieldReference\r\n} from '../models/schema';\r\nimport { whitespaceValidator } from '../validators/whitespace-validator';\r\n\r\n@Injectable()\r\nexport class FormBuilderService {\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  group(\r\n    struct: string,\r\n    blockName: string,\r\n    blocks: Map<string, IBlock>,\r\n    fields: Map<string, IField>,\r\n    value = {}\r\n  ): FormGroup {\r\n    const group = {};\r\n    const block = blocks[`${struct}-${blockName}`];\r\n\r\n    for (const fieldReference of block.fields) {\r\n      const field = fields[`${struct}-${fieldReference.field}`];\r\n\r\n      if (field.type === 'stamp') {\r\n        continue;\r\n      }\r\n\r\n      if (field.type === 'linkedStruct') {\r\n        const linkedStructField = <ILinkedStructField>field;\r\n        const { reference } = linkedStructField;\r\n\r\n        const array = this.array(\r\n          reference.struct,\r\n          reference.block,\r\n          blocks,\r\n          fields,\r\n          value[field.name]\r\n        );\r\n\r\n        if (!array.value.length && linkedStructField.minInstances > 0) {\r\n          // tslint:disable-next-line:no-increment-decrement\r\n          for (let i = 0; i < linkedStructField.minInstances; i++) {\r\n            array.push(this.group(reference.struct, reference.block, blocks, fields));\r\n          }\r\n        }\r\n\r\n        group[field.name] = array;\r\n\r\n        continue;\r\n      }\r\n\r\n      const validators = this.getValidators(fieldReference, field);\r\n      const initialValue = value[field.name] || field.initialValue;\r\n\r\n      group[field.name] = [initialValue, validators];\r\n    }\r\n\r\n    const formGroup = this.fb.group(group);\r\n\r\n    if (!formGroup.value) {\r\n      formGroup.patchValue({});\r\n    }\r\n\r\n    return formGroup;\r\n  }\r\n\r\n  array(\r\n    struct: string,\r\n    blockName: string,\r\n    blocks: Map<string, IBlock>,\r\n    fields: Map<string, IField>,\r\n    value = []\r\n  ): FormArray {\r\n    const array = [];\r\n\r\n    if (value && value.length) {\r\n      value.forEach((item) => {\r\n        const group = this.group(struct, blockName, blocks, fields, item);\r\n\r\n        array.push(group);\r\n      });\r\n    }\r\n\r\n    const formArray = this.fb.array(array);\r\n    if (!formArray.value) {\r\n      formArray.setValue([]);\r\n    }\r\n\r\n    return formArray;\r\n  }\r\n\r\n\r\n\r\n  private getValidators(fieldReference: IFieldReference, field: IField) {\r\n    return (control: AbstractControl) => {\r\n      const validators = [];\r\n\r\n      const root = control.root;\r\n      const parent = control.parent;\r\n\r\n      if (\r\n        parent instanceof FormGroup &&\r\n        !fieldReference.condition(parent.value, root.value)\r\n      ) {\r\n        return null;\r\n      }\r\n\r\n      if (field.required) {\r\n        validators.push(Validators.required, whitespaceValidator);\r\n      }\r\n\r\n      if ((<ITextField>field).minLength) {\r\n        validators.push(Validators.minLength((<ITextField>field).minLength));\r\n      }\r\n\r\n      if ((<ITextField>field).maxLength) {\r\n        validators.push(Validators.maxLength((<ITextField>field).maxLength));\r\n      }\r\n\r\n      if ((<IIntegerField>field).min) {\r\n        validators.push(Validators.min((<IIntegerField>field).min));\r\n      }\r\n\r\n      if ((<IIntegerField>field).max) {\r\n        validators.push(Validators.max((<IIntegerField>field).max));\r\n      }\r\n\r\n      if (!validators.length) {\r\n        return null;\r\n      }\r\n\r\n      return Validators.compose(validators)(control);\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { DeReCrudOptions } from '../models/options';\r\nimport { IStruct, IField, IBlock } from '../models/schema';\r\nimport { FormSubmissionErrors } from '../models/form-submission';\r\nimport { FormBuilderService } from './form-builder.service';\r\nimport { FormChange } from '../models/form-change';\r\nimport { FormState } from '../models/form-state';\r\n\r\nexport type GetKeyFunction<T> = (item: T) => string;\r\n\r\n@Injectable()\r\n// @dynamic\r\nexport class FormStateService {\r\n  // tslint:disable-next-line:no-function-constructor-with-string-args\r\n  private static defaultConditionFunc = new Function('return true');\r\n  private _cache: { [id: number]: FormState } = {};\r\n\r\n  constructor(private formBuilder: FormBuilderService) {}\r\n\r\n  static generateId() {\r\n    return Math.random();\r\n  }\r\n\r\n  static assignDefaults(options: DeReCrudOptions) {\r\n    if (!options.headerSize) {\r\n      options.headerSize = 3;\r\n    }\r\n  }\r\n\r\n  // TODO: This should expand strings into a label object; the renderers should handle which label to show based on screen size\r\n  static parseLabel(label: string | { short: string }) {\r\n    if (typeof label === 'string') {\r\n      return label;\r\n    }\r\n\r\n    return label.short;\r\n  }\r\n\r\n  static parseSchema(options: DeReCrudOptions) {\r\n    const structs: IStruct[] = [];\r\n    const fields: IField[] = [];\r\n    const blocks: IBlock[] = [];\r\n\r\n    for (const structSchema of options.schema) {\r\n      const struct = {\r\n        ...structSchema,\r\n        label: this.parseLabel(structSchema.label),\r\n        collectionLabel: this.parseLabel(structSchema.label),\r\n        fields: [],\r\n        blocks: []\r\n      };\r\n\r\n      for (const fieldSchema of structSchema.fields) {\r\n        const label = this.parseLabel(fieldSchema.label);\r\n\r\n        const field = {\r\n          ...fieldSchema,\r\n          label,\r\n          placeholder: fieldSchema.placeholder || label,\r\n          struct: structSchema.name\r\n        };\r\n\r\n        if (field.reference && !field.reference.block) {\r\n          field.reference.block = 'default';\r\n        }\r\n\r\n        fields.push(field);\r\n        struct.fields.push(field.name);\r\n      }\r\n\r\n      for (const blockSchema of structSchema.blocks) {\r\n        const block = {\r\n          ...blockSchema,\r\n          fields: [],\r\n          struct: structSchema.name\r\n        };\r\n\r\n        for (const reference of blockSchema.fields) {\r\n          if (!reference) {\r\n            continue;\r\n          }\r\n\r\n          const fieldReference = reference.field\r\n            ? reference\r\n            : { field: reference };\r\n\r\n          let condition;\r\n\r\n          if (fieldReference.condition) {\r\n            const returnValue =\r\n              fieldReference.condition[0] === '{'\r\n                ? fieldReference.condition\r\n                : `return ${fieldReference.condition}`;\r\n\r\n            // tslint:disable-next-line:no-function-constructor-with-string-args\r\n            condition = new Function('value', 'rootValue', returnValue);\r\n          } else {\r\n            // tslint:disable-next-line:no-function-constructor-with-string-args\r\n            condition = FormStateService.defaultConditionFunc;\r\n          }\r\n\r\n          fieldReference.condition = condition;\r\n          block.fields.push(fieldReference);\r\n        }\r\n\r\n        blocks.push(block);\r\n        struct.blocks.push(block.name);\r\n      }\r\n\r\n      structs.push(struct);\r\n    }\r\n\r\n    return {\r\n      structs,\r\n      fields,\r\n      blocks\r\n    };\r\n  }\r\n\r\n  get(id: number): FormState {\r\n    return this._cache[id];\r\n  }\r\n\r\n  create(options: DeReCrudOptions, value: object, initialErrors?: FormSubmissionErrors): FormState {\r\n    let id: number;\r\n\r\n    while (true) {\r\n      id = FormStateService.generateId();\r\n\r\n      if (this._cache[id]) {\r\n        continue;\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    FormStateService.assignDefaults(options);\r\n\r\n    const schema = FormStateService.parseSchema(options);\r\n    const structs = this.arrayToMap(struct => struct.name, schema.structs);\r\n    const fields = this.arrayToMap(\r\n      field => `${field.struct}-${field.name}`,\r\n      schema.fields\r\n    );\r\n\r\n    const blocks = this.arrayToMap(\r\n      block => `${block.struct}-${block.name}`,\r\n      schema.blocks\r\n    );\r\n\r\n    const form = this.formBuilder.group(\r\n      options.struct,\r\n      options.block,\r\n      blocks,\r\n      fields,\r\n      value\r\n    );\r\n\r\n    const state: FormState = {\r\n      id,\r\n      options,\r\n      form,\r\n      structs,\r\n      fields,\r\n      blocks,\r\n      submissionErrors: initialErrors,\r\n      onSubmissionErrorsChange: new Subject<FormSubmissionErrors>(),\r\n      navigationStack: [],\r\n      onNavigationChange: new Subject<number>(),\r\n      onValueChange: new Subject<FormChange>()\r\n    };\r\n\r\n    this._cache[id] = state;\r\n\r\n    return state;\r\n  }\r\n\r\n  createForm(formId: number, struct: string, block: string): FormGroup {\r\n    if (!this._cache[formId]) {\r\n      return;\r\n    }\r\n\r\n    const { fields, blocks } = this._cache[formId];\r\n    return this.formBuilder.group(struct, block, blocks, fields);\r\n  }\r\n\r\n  update(id: number, value: object) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    const { form } = this._cache[id];\r\n\r\n    form.patchValue(value);\r\n  }\r\n\r\n  remove(id: number) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    delete this._cache[id];\r\n  }\r\n\r\n  clearErrors(id: number, formPath?: string) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    if (formPath) {\r\n      delete this._cache[id].submissionErrors[formPath];\r\n    } else {\r\n      this._cache[id].submissionErrors = {};\r\n    }\r\n\r\n    this.pushSubmissionErrorsChange(id);\r\n  }\r\n\r\n  setErrors(id: number, errors: FormSubmissionErrors) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    this._cache[id].submissionErrors = errors;\r\n    this.pushSubmissionErrorsChange(id);\r\n  }\r\n\r\n  onChange(id: number, formPath: string, newValue: any, event: string) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    const state = this._cache[id];\r\n    this.clearErrors(id, formPath);\r\n\r\n    if (event && state.options.changeNotificationType !== event) {\r\n      return;\r\n    }\r\n\r\n    (<Subject<FormChange>>state.onValueChange).next({\r\n      fieldPath: formPath,\r\n      value: newValue,\r\n      formValue: state.form.value\r\n    });\r\n  }\r\n\r\n  pushNavigation(id: number, struct: string, block: string, path: string, parentPath: string) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    this._cache[id].navigationStack.push({\r\n      struct,\r\n      block,\r\n      path,\r\n      parentPath\r\n    });\r\n\r\n    this.pushNavigationChange(id);\r\n  }\r\n\r\n  popNavigation(id: number) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    this._cache[id].navigationStack.pop();\r\n\r\n    this.pushNavigationChange(id);\r\n  }\r\n\r\n  completeNavigation(id: number) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    this.popNavigation(id);\r\n  }\r\n\r\n  private pushNavigationChange(id: number, childId?: number) {\r\n    const state = this._cache[id];\r\n    (<Subject<number>>state.onNavigationChange).next(childId);\r\n  }\r\n\r\n  private pushSubmissionErrorsChange(id: number) {\r\n    const state = this._cache[id];\r\n    (<Subject<FormSubmissionErrors>>state.onSubmissionErrorsChange).next(\r\n      state.submissionErrors\r\n    );\r\n  }\r\n\r\n  private arrayToMap<T>(getKey: GetKeyFunction<T>, array: T[]) {\r\n    return array.reduce<Map<string, T>>((acc, current) => {\r\n      acc[getKey(current)] = current;\r\n      return acc;\r\n    }, new Map<string, T>());\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ComponentFactoryResolver,\r\n  SimpleChanges,\r\n  OnDestroy,\r\n  ComponentRef,\r\n  ViewChild,\r\n  OnChanges,\r\n  SimpleChange\r\n} from '@angular/core';\r\nimport { CollectionControlRenderer, ICollectionControl } from '../renderers/control.renderer';\r\nimport { IReferenceField } from '../models/schema';\r\nimport { FormState } from '../models/form-state';\r\nimport { FormStateService } from '../services/form-state.service';\r\nimport { DeReCrudProviderService } from '../../providers/provider/provider.service';\r\nimport { ComponentHostDirective } from './component-host.directive';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-collection-field-host',\r\n  template: `<ng-template deReCrudComponentHost></ng-template>`\r\n})\r\nexport class CollectionFieldHostComponent implements OnInit, OnChanges, OnDestroy, CollectionControlRenderer {\r\n  private _componentRef: ComponentRef<any>;\r\n  @ViewChild(ComponentHostDirective) componentHost: ComponentHostDirective;\r\n  @Input() control: ICollectionControl;\r\n  state: FormState;\r\n\r\n  constructor(\r\n    private stateService: FormStateService,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private providerService: DeReCrudProviderService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.state = this.stateService.get(this.control.formId);\r\n    this.render();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.control && !changes.control.firstChange) {\r\n      this.updateInputs();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._componentRef) {\r\n      this._componentRef.destroy();\r\n      this._componentRef = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this._componentRef) {\r\n      this._componentRef.destroy();\r\n      this._componentRef = null;\r\n    }\r\n\r\n    let controlComponent: any;\r\n\r\n    const providerOptions = this.providerService.get(\r\n      this.state.options.provider\r\n    );\r\n\r\n    switch (this.control.layout) {\r\n      case 'inline':\r\n        controlComponent = providerOptions.inlineComponent;\r\n        break;\r\n      case 'table':\r\n        controlComponent = providerOptions.tableComponent;\r\n        break;\r\n      default:\r\n        console.error(\r\n          `${this.control.layout} layout is not supported.`,\r\n          JSON.stringify(this.control.field)\r\n        );\r\n        return;\r\n    }\r\n\r\n    const viewContainerRef = this.componentHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\r\n      controlComponent\r\n    );\r\n\r\n    this._componentRef = viewContainerRef.createComponent(componentFactory);\r\n\r\n    this.updateInputs();\r\n  }\r\n\r\n  updateInputs() {\r\n    if (!this._componentRef) {\r\n      return;\r\n    }\r\n\r\n    const componentRenderer = <CollectionControlRenderer>this._componentRef.instance;\r\n\r\n    const control: ICollectionControl = {\r\n      ...this.control,\r\n      onAdd: this.onAdd\r\n    };\r\n\r\n    const previousControl = componentRenderer.control;\r\n    componentRenderer.control = control;\r\n\r\n    const onComponentChange = (<OnChanges>this._componentRef.instance).ngOnChanges;\r\n\r\n    if (onComponentChange) {\r\n      const change: SimpleChange = {\r\n        previousValue: previousControl,\r\n        currentValue: control,\r\n        firstChange: typeof previousControl === 'undefined',\r\n        isFirstChange: () => change.firstChange\r\n      };\r\n\r\n      onComponentChange.call(componentRenderer, { control: change });\r\n    }\r\n  }\r\n\r\n  onAdd = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    const reference = (<IReferenceField>this.control.field).reference;\r\n\r\n    const form = this.stateService.createForm(this.control.formId, reference.struct, reference.block);\r\n    this.control.value.push(form);\r\n\r\n    const index = this.control.value.controls.indexOf(form);\r\n    const childPath = `${this.control.formPath}.${index}`;\r\n\r\n    if (this.control.layout === 'table') {\r\n      this.stateService.pushNavigation(this.control.formId, reference.struct, reference.block, childPath, this.control.formPath);\r\n    }\r\n\r\n    this.control.onChange(null);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  SimpleChange\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { DeReCrudProviderService } from '../../providers/provider/provider.service';\r\nimport {\r\n  IField,\r\n  IListField,\r\n  ILinkedStructField,\r\n  ILinkedStructFieldReference,\r\n  IFieldReference\r\n} from '../models/schema';\r\nimport { FormGroup, FormArray, AbstractControl } from '@angular/forms';\r\nimport { FormState } from '../models/form-state';\r\nimport { FormStateService } from '../services/form-state.service';\r\nimport {\r\n  ControlRenderer,\r\n  IControl,\r\n  ISelectControl,\r\n  ICollectionControl\r\n} from '../renderers/control.renderer';\r\nimport { ComponentHostDirective } from './component-host.directive';\r\nimport { CollectionFieldHostComponent } from './collection-field-host.component';\r\n\r\n\r\n@Component({\r\n  selector: 'de-re-crud-input-field-host',\r\n  template: `\r\n    <ng-template deReCrudComponentHost></ng-template>`\r\n})\r\nexport class InputFieldHostComponent implements OnInit, OnChanges, OnDestroy {\r\n  private _componentRefs: ComponentRef<any>[] = [];\r\n  private _submissionErrorsChangeSubscription: Subscription;\r\n  private _formChangeSubscription: Subscription;\r\n  private _valueOnFocus: any;\r\n  @ViewChild(ComponentHostDirective) componentHost: ComponentHostDirective;\r\n  @Input() formId: number;\r\n  @Input() form: FormGroup;\r\n  @Input() struct: string;\r\n  @Input() block: string;\r\n  @Input() field: IField;\r\n  @Input() parentForm: AbstractControl;\r\n  @Input() parentPath: string;\r\n  state: FormState;\r\n  fieldReference: IFieldReference;\r\n\r\n  constructor(\r\n    private stateService: FormStateService,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private providerService: DeReCrudProviderService\r\n  ) {\r\n  }\r\n\r\n  get formPath() {\r\n    let formPath = this.field.name;\r\n\r\n    if (this.parentPath) {\r\n      let parentPath = this.parentPath;\r\n\r\n      if (this.parentForm instanceof FormArray) {\r\n        const index = this.parentForm.controls.indexOf(this.form);\r\n        parentPath += '.' + index;\r\n      }\r\n\r\n      formPath = `${parentPath}.${formPath}`;\r\n    }\r\n\r\n    return formPath;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.state = this.stateService.get(this.formId);\r\n\r\n    const fieldReference = this.state.blocks[`${this.struct}-${this.block}`].fields.find(\r\n      x => x.field === this.field.name\r\n    );\r\n\r\n    this.fieldReference = fieldReference;\r\n\r\n    this._submissionErrorsChangeSubscription = this.state.onSubmissionErrorsChange.subscribe(\r\n      () => {\r\n        this.updateInputs();\r\n      }\r\n    );\r\n\r\n    this._formChangeSubscription = this.form.valueChanges.subscribe(\r\n      () => {\r\n        if (!this.shouldRender()) {\r\n          this.destroyRefs();\r\n        } else if (!this._componentRefs.length) {\r\n          this.render();\r\n        } else {\r\n          this.updateInputs();\r\n        }\r\n      }\r\n    );\r\n\r\n    this.render();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.formId && !changes.formId.isFirstChange()) {\r\n      this.ngOnDestroy();\r\n      this.ngOnInit();\r\n      return;\r\n    }\r\n\r\n    this.updateInputs();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._submissionErrorsChangeSubscription) {\r\n      this._submissionErrorsChangeSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this._formChangeSubscription) {\r\n      this._formChangeSubscription.unsubscribe();\r\n    }\r\n\r\n    this.destroyRefs();\r\n  }\r\n\r\n  destroyRefs() {\r\n    if (this._componentRefs.length) {\r\n      this._componentRefs.forEach(x => x.destroy());\r\n      this._componentRefs = [];\r\n    }\r\n  }\r\n\r\n  shouldRender() {\r\n    return this.fieldReference && this.fieldReference.condition(this.form.value, this.state.form.root.value);\r\n  }\r\n\r\n  render() {\r\n    this.destroyRefs();\r\n\r\n    if (!this.shouldRender()) {\r\n      return;\r\n    }\r\n\r\n    let controlComponent: any;\r\n\r\n    const providerOptions = this.providerService.get(\r\n      this.state.options.provider\r\n    );\r\n\r\n    switch (this.field.type) {\r\n      case 'text':\r\n      case 'integer':\r\n      case 'date':\r\n        controlComponent = providerOptions.inputComponent;\r\n        break;\r\n      case 'boolean':\r\n        controlComponent = providerOptions.checkboxComponent;\r\n        break;\r\n      case 'list':\r\n      case 'foreignKey':\r\n        controlComponent = providerOptions.selectComponent;\r\n        break;\r\n      case 'linkedStruct':\r\n        controlComponent = CollectionFieldHostComponent;\r\n        break;\r\n      default:\r\n        console.error(\r\n          `${this.field.type} control is not supported.`,\r\n          JSON.stringify(this.field)\r\n        );\r\n        return;\r\n    }\r\n\r\n    const viewContainerRef = this.componentHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    const containerComponentFactory = this.componentFactoryResolver.resolveComponentFactory(\r\n      providerOptions.containerComponent\r\n    );\r\n\r\n    const controlComponentFactory = this.componentFactoryResolver.resolveComponentFactory(\r\n      controlComponent\r\n    );\r\n\r\n    const controlComponentRef = viewContainerRef.createComponent(\r\n      controlComponentFactory\r\n    );\r\n\r\n    const containerComponentRef = viewContainerRef.createComponent(\r\n      containerComponentFactory,\r\n      0,\r\n      undefined,\r\n      [[controlComponentRef.location.nativeElement]]\r\n    );\r\n\r\n    this._componentRefs.push(controlComponentRef, containerComponentRef);\r\n\r\n    this.updateInputs();\r\n  }\r\n\r\n  updateInputs() {\r\n    if (this.shouldRender() && !this._componentRefs.length) {\r\n      this.render();\r\n      return;\r\n    }\r\n\r\n    if (!this._componentRefs.length) {\r\n      return;\r\n    }\r\n\r\n    const formPath = this.formPath;\r\n    const value = this.form.root.get(formPath);\r\n\r\n    const control: IControl = {\r\n      value,\r\n      formPath,\r\n      field: this.field,\r\n      formId: this.formId,\r\n      submissionErrors:\r\n        (this.state.submissionErrors &&\r\n          this.state.submissionErrors[formPath]) ||\r\n        [],\r\n      form: this.form,\r\n      rendererType: this.mapType(this.field.type),\r\n      htmlId: `${this.formId}-${formPath}`,\r\n      onFocus: this.onFocus,\r\n      onBlur: this.onBlur,\r\n      onChange: this.onChange\r\n    };\r\n\r\n    switch (this.field.type) {\r\n      case 'list':\r\n      case 'foreignKey': {\r\n        const listField = <IListField>this.field;\r\n\r\n        const selectControl = <ISelectControl>control;\r\n\r\n        if (this.field.type === 'foreignKey') {\r\n          selectControl.options = () => [];\r\n        } else {\r\n          selectControl.options = () => listField.options;\r\n        }\r\n        break;\r\n      }\r\n      case 'linkedStruct': {\r\n        const collectionControl = <ICollectionControl>control;\r\n\r\n        const linkedStructField = <ILinkedStructField>this.field;\r\n        const { reference } = linkedStructField;\r\n\r\n        const blockFields = this.state.blocks[`${this.struct}-${this.block}`].fields;\r\n\r\n        const { hints } = <ILinkedStructFieldReference>blockFields.find(\r\n          x => x.field === linkedStructField.name\r\n        );\r\n\r\n        const referenceBlock = (hints && hints.block) || reference.block;\r\n\r\n        const fieldReferences = <ILinkedStructFieldReference[]>this.state\r\n          .blocks[`${reference.struct}-${referenceBlock}`].fields;\r\n\r\n        const nestedFields = [];\r\n\r\n        for (const fieldReference of fieldReferences) {\r\n          const field = this.state.fields[`${reference.struct}-${fieldReference.field}`];\r\n          nestedFields.push(field);\r\n        }\r\n\r\n        const nestedValues = [];\r\n\r\n        for (const nestedValue of collectionControl.value.controls) {\r\n          nestedValues.push(<FormGroup>nestedValue);\r\n        }\r\n\r\n        collectionControl.stamp = {\r\n          text: control.field.label,\r\n          headerSize: this.state.options.headerSize\r\n        };\r\n\r\n        collectionControl.canAdd = !linkedStructField.maxInstances || nestedValues.length < linkedStructField.maxInstances;\r\n        collectionControl.nestedValues = nestedValues;\r\n        collectionControl.nestedFields = nestedFields;\r\n        collectionControl.layout = (hints && hints.layout) || 'inline';\r\n        break;\r\n      }\r\n    }\r\n\r\n    for (const componentRef of this._componentRefs) {\r\n      const componentRenderer = <ControlRenderer>componentRef.instance;\r\n\r\n      const previousControl = componentRenderer.control;\r\n      componentRenderer.control = control;\r\n\r\n      const onComponentChange = (<OnChanges>componentRef.instance).ngOnChanges;\r\n      if (onComponentChange) {\r\n        const change: SimpleChange = {\r\n          previousValue: previousControl,\r\n          currentValue: control,\r\n          firstChange: typeof previousControl === 'undefined',\r\n          isFirstChange: () => change.firstChange\r\n        };\r\n\r\n        onComponentChange.call(componentRenderer, { control: change });\r\n      }\r\n    }\r\n  }\r\n\r\n  onFocus = () => {\r\n    this._valueOnFocus = this.form.root.get(this.formPath).value;\r\n  }\r\n\r\n  onBlur = () => {\r\n    const newValue = this.form.root.get(this.formPath).value;\r\n\r\n    if (this._valueOnFocus !== newValue) {\r\n      this.stateService.onChange(this.formId, this.formPath, newValue, 'blur');\r\n    }\r\n  }\r\n\r\n  onChange = (e: any) => {\r\n    const newValue = this.form.root.get(this.formPath).value;\r\n    this.stateService.onChange(this.formId, this.formPath, newValue, e ? 'change' : null);\r\n  }\r\n\r\n  private mapType(type: string) {\r\n    switch (type) {\r\n      case 'integer':\r\n        return 'number';\r\n      default:\r\n        return type;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { DeReCrudProviderService } from '../../providers/provider/provider.service';\r\nimport { FormState } from '../models/form-state';\r\nimport { ButtonRenderer } from '../renderers/button.renderer';\r\nimport { FormStateService } from '../services/form-state.service';\r\nimport { ComponentHostDirective } from './component-host.directive';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-button-host',\r\n  template: `<ng-template deReCrudComponentHost></ng-template>`\r\n})\r\nexport class ButtonHostComponent implements OnInit, OnChanges, OnDestroy {\r\n  private _componentRef: ComponentRef<any>;\r\n  @ViewChild(ComponentHostDirective) componentHost: ComponentHostDirective;\r\n  @Input() formId: number;\r\n  @Input() type: 'button' | 'submit' | 'cancel';\r\n  @Input() extraClasses: string | string[];\r\n  @Input() text: string;\r\n  @Input() disabled: boolean;\r\n  @Output() click = new EventEmitter<any>();\r\n  state: FormState;\r\n\r\n  constructor(\r\n    private stateService: FormStateService,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private providerService: DeReCrudProviderService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.state = this.stateService.get(this.formId);\r\n    this.render();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.formId && !changes.formId.isFirstChange()) {\r\n      this.ngOnDestroy();\r\n      this.ngOnInit();\r\n      return;\r\n    }\r\n\r\n    this.updateInputs();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._componentRef) {\r\n      this._componentRef.destroy();\r\n      this._componentRef = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this._componentRef) {\r\n      this._componentRef.destroy();\r\n      this._componentRef = null;\r\n    }\r\n\r\n    const providerOptions = this.providerService.get(\r\n      this.state.options.provider\r\n    );\r\n\r\n    const viewContainerRef = this.componentHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\r\n      providerOptions.buttonComponent\r\n    );\r\n\r\n    this._componentRef = viewContainerRef.createComponent(componentFactory);\r\n\r\n    this.updateInputs();\r\n  }\r\n\r\n  updateInputs() {\r\n    if (!this._componentRef) {\r\n      return;\r\n    }\r\n\r\n    const {\r\n      options: { struct, submitButtonStyle, cancelButtonStyle },\r\n      structs\r\n    } = this.state;\r\n\r\n    const isSubmit = this.type === 'submit';\r\n\r\n    let style = null;\r\n\r\n    switch (this.type) {\r\n      case 'submit':\r\n        style = submitButtonStyle;\r\n        break;\r\n      case 'cancel':\r\n        style = cancelButtonStyle;\r\n        break;\r\n    }\r\n\r\n    let text = (style && style.text) || this.text;\r\n\r\n    if (\r\n      isSubmit &&\r\n      submitButtonStyle &&\r\n      submitButtonStyle.appendSchemaLabel\r\n    ) {\r\n      text = `${text} ${structs[struct].label}`;\r\n    }\r\n\r\n    const extraClasses = [];\r\n\r\n    if (this.state.options.extraButtonClasses) {\r\n      extraClasses.push(...this.state.options.extraButtonClasses);\r\n    }\r\n\r\n    if (this.extraClasses) {\r\n      if (typeof this.extraClasses === 'string') {\r\n        extraClasses.push(...this.extraClasses.split(' '));\r\n      } else {\r\n        extraClasses.push(...this.extraClasses);\r\n      }\r\n    }\r\n\r\n    const componentRenderer = <ButtonRenderer>this._componentRef.instance;\r\n    componentRenderer.button = {\r\n      text,\r\n      extraClasses,\r\n      type: isSubmit ? 'submit' : 'button',\r\n      disabled: this.disabled,\r\n      onClick: this.onClick,\r\n      class: (style && style.class) || undefined\r\n    };\r\n  }\r\n\r\n  onClick = (e) => {\r\n    this.click.emit(e);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ComponentRef,\r\n  ViewChild,\r\n  Input,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  ComponentFactoryResolver,\r\n  SimpleChanges,\r\n  SimpleChange\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { DeReCrudProviderService } from '../../providers/provider/provider.service';\r\nimport { IField, IFieldReference, IStampField } from '../models/schema';\r\nimport { FormStateService } from '../services/form-state.service';\r\nimport { StampRenderer, IStamp } from '../renderers/stamp.renderer';\r\nimport { FormState } from '../models/form-state';\r\nimport { ComponentHostDirective } from './component-host.directive';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-stamp-field-host',\r\n  template: `<ng-template deReCrudComponentHost></ng-template>`\r\n})\r\nexport class StampFieldHostComponent implements OnInit, OnChanges, OnDestroy {\r\n  private _componentRef: ComponentRef<any>;\r\n  @ViewChild(ComponentHostDirective) componentHost: ComponentHostDirective;\r\n  @Input() formId: number;\r\n  @Input() form: FormGroup;\r\n  @Input() struct: string;\r\n  @Input() block: string;\r\n  @Input() field: IField;\r\n  state: FormState;\r\n  fieldReference: IFieldReference;\r\n\r\n  constructor(\r\n    private stateService: FormStateService,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private providerService: DeReCrudProviderService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.state = this.stateService.get(this.formId);\r\n\r\n    const fieldReference = this.state.blocks[\r\n      `${this.struct}-${this.block}`\r\n    ].fields.find(x => x.field === this.field.name);\r\n\r\n    this.fieldReference = fieldReference;\r\n\r\n    this.render();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.formId && !changes.formId.isFirstChange()) {\r\n      this.ngOnDestroy();\r\n      this.ngOnInit();\r\n      return;\r\n    }\r\n\r\n    this.updateInputs();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._componentRef) {\r\n      this._componentRef.destroy();\r\n      this._componentRef = null;\r\n    }\r\n  }\r\n\r\n  shouldRender() {\r\n    return this.fieldReference.condition(\r\n      this.form.value,\r\n      this.state.form.root.value\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this._componentRef) {\r\n      this._componentRef.destroy();\r\n      this._componentRef = null;\r\n    }\r\n\r\n    if (!this.shouldRender()) {\r\n      return;\r\n    }\r\n\r\n    let controlComponent: any;\r\n\r\n    const providerOptions = this.providerService.get(\r\n      this.state.options.provider\r\n    );\r\n\r\n    switch (this.field.type) {\r\n      case 'stamp':\r\n        controlComponent = providerOptions.stampComponent;\r\n        break;\r\n      default:\r\n        console.error(\r\n          `${this.field.type} control is not supported.`,\r\n          JSON.stringify(this.field)\r\n        );\r\n        return;\r\n    }\r\n\r\n    const viewContainerRef = this.componentHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\r\n      controlComponent\r\n    );\r\n\r\n    this._componentRef = viewContainerRef.createComponent(componentFactory);\r\n\r\n    this.updateInputs();\r\n  }\r\n\r\n  updateInputs() {\r\n    if (!this._componentRef) {\r\n      return;\r\n    }\r\n\r\n    const componentRenderer = <StampRenderer>this._componentRef.instance;\r\n    const stampField = <IStampField>this.field;\r\n\r\n    const stamp: IStamp = {\r\n      text: stampField.label,\r\n      headerSize: this.state.options.headerSize\r\n    };\r\n\r\n    if (stampField.hints) {\r\n      if (stampField.hints.headerSize) {\r\n        stamp.headerSize = stampField.hints.headerSize;\r\n      }\r\n\r\n      if (stampField.hints.displayClassNames) {\r\n        stamp.classes = stampField.hints.displayClassNames;\r\n      }\r\n    }\r\n\r\n    const previousStamp = componentRenderer.stamp;\r\n    componentRenderer.stamp = stamp;\r\n\r\n    const onComponentChange = (<OnChanges>this._componentRef.instance)\r\n      .ngOnChanges;\r\n\r\n    if (onComponentChange) {\r\n      const change: SimpleChange = {\r\n        previousValue: previousStamp,\r\n        currentValue: stamp,\r\n        firstChange: typeof previousStamp === 'undefined',\r\n        isFirstChange: () => change.firstChange\r\n      };\r\n\r\n      onComponentChange.call(componentRenderer, { control: change });\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, SimpleChanges, OnChanges, OnInit } from '@angular/core';\r\nimport { FormGroup, AbstractControl } from '@angular/forms';\r\nimport { IField } from '../../models/schema';\r\nimport { FormState } from '../../models/form-state';\r\nimport { FormStateService } from '../../services/form-state.service';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-form-host',\r\n  template: `<ng-container *ngFor=\"let field of fields\">\r\n  <ng-container [ngSwitch]=\"field.type\">\r\n    <de-re-crud-stamp-field-host\r\n      *ngSwitchCase=\"'stamp'\"\r\n      [formId]=\"formId\"\r\n      [form]=\"form\"\r\n      [field]=\"field\"\r\n      [struct]=\"struct\"\r\n      [block]=\"block\">\r\n    </de-re-crud-stamp-field-host>\r\n    <de-re-crud-input-field-host\r\n      *ngSwitchDefault\r\n      [formId]=\"formId\"\r\n      [form]=\"form\"\r\n      [parentPath]=\"parentPath\"\r\n      [parentForm]=\"parentForm\"\r\n      [field]=\"field\"\r\n      [struct]=\"struct\"\r\n      [block]=\"block\">\r\n    </de-re-crud-input-field-host>\r\n  </ng-container>\r\n</ng-container>\r\n`\r\n})\r\nexport class FormHostComponent implements OnInit, OnChanges {\r\n  private _struct: string;\r\n  private _block: string;\r\n\r\n  @Input() formId: number;\r\n  @Input() form: FormGroup;\r\n  @Input() fields: IField[];\r\n  @Input() parentForm: AbstractControl;\r\n  @Input() parentPath: string;\r\n  state: FormState;\r\n\r\n  constructor(\r\n    private stateService: FormStateService\r\n  ) {}\r\n\r\n  get struct() {\r\n    return this._struct || this.state.options.struct;\r\n  }\r\n\r\n  @Input()\r\n  set struct(value: string) {\r\n    this._struct = value;\r\n  }\r\n\r\n  get block() {\r\n    return this._block || this.state.options.block;\r\n  }\r\n\r\n  @Input()\r\n  set block(value: string) {\r\n    this._block = value;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.state = this.stateService.get(this.formId);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.formId && !changes.formId.isFirstChange()) {\r\n      this.ngOnInit();\r\n      return;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ComponentHostDirective } from './hosts/component-host.directive';\r\nimport { InputFieldHostComponent } from './hosts/input-field-host.component';\r\nimport { ButtonHostComponent } from './hosts/button-host.component';\r\nimport { FormBuilderService } from './services/form-builder.service';\r\nimport { FormStateService } from './services/form-state.service';\r\nimport { CollectionFieldHostComponent } from './hosts/collection-field-host.component';\r\nimport { StampFieldHostComponent } from './hosts/stamp-field-host.component';\r\nimport { FormHostComponent } from './hosts/form-host/form-host.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    ComponentHostDirective,\r\n    InputFieldHostComponent,\r\n    StampFieldHostComponent,\r\n    ButtonHostComponent,\r\n    CollectionFieldHostComponent,\r\n    FormHostComponent\r\n  ],\r\n  providers: [FormStateService, FormBuilderService],\r\n  exports: [InputFieldHostComponent, StampFieldHostComponent, ButtonHostComponent, FormHostComponent],\r\n  entryComponents: [CollectionFieldHostComponent]\r\n})\r\nexport class DeReCrudCoreModule { }\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormStateService } from '../../core/services/form-state.service';\r\nimport { DeReCrudOptions } from '../../core/models/options';\r\nimport { IField } from '../../core/models/schema';\r\nimport { FormSubmission, FormSubmissionErrors } from '../../core/models/form-submission';\r\nimport { FormChange } from '../../core/models/form-change';\r\nimport { FormState } from '../../core/models/form-state';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-form',\r\n  template: `<form *ngIf=\"state.form\" [formGroup]=\"state.form\">\r\n  <de-re-crud-form-host [formId]=\"state.id\"\r\n                        [form]=\"form\"\r\n                        [struct]=\"struct\"\r\n                        [block]=\"block\"\r\n                        [parentPath]=\"parentPath\"\r\n                        [parentForm]=\"parentForm\"\r\n                        [fields]=\"fields\">\r\n  </de-re-crud-form-host>\r\n  <de-re-crud-button-host type=\"submit\"\r\n                          [formId]=\"state.id\"\r\n                          [disabled]=\"!submitEnabled\"\r\n                          text=\"Submit\"\r\n                          (click)=\"onSubmit($event)\">\r\n  </de-re-crud-button-host>\r\n  <de-re-crud-button-host *ngIf=\"cancelVisible\"\r\n                          type=\"cancel\"\r\n                          [formId]=\"state.id\"\r\n                          [disabled]=\"!cancelEnabled\"\r\n                          text=\"Cancel\"\r\n                          (click)=\"onCancel($event)\">\r\n  </de-re-crud-button-host>\r\n</form>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class FormComponent implements OnInit, OnChanges, OnDestroy {\r\n  private _navigationChangeSubscription: Subscription;\r\n  private _formChangeSubscription: Subscription;\r\n  private _cancelVisible: boolean;\r\n\r\n  @Input() options: DeReCrudOptions;\r\n  @Input() value: object;\r\n  @Input() errors: FormSubmissionErrors;\r\n  @Output() valueChange = new EventEmitter<FormChange>();\r\n  @Output() submit = new EventEmitter<FormSubmission>();\r\n  @Output() cancel = new EventEmitter<any>();\r\n\r\n  fields: IField[];\r\n  state: FormState;\r\n  submitting: boolean;\r\n\r\n  constructor(private stateService: FormStateService) {}\r\n\r\n  get cancelVisible() {\r\n    return !!this.state.navigationStack.length || this._cancelVisible;\r\n  }\r\n\r\n  @Input()\r\n  set cancelVisible(value: boolean) {\r\n    this._cancelVisible = value;\r\n  }\r\n\r\n  get submitEnabled() {\r\n    return !this.submitting && this.form.valid;\r\n  }\r\n\r\n  get cancelEnabled() {\r\n    return !this.submitting;\r\n  }\r\n\r\n  get struct() {\r\n    const { navigationStack } = this.state;\r\n    const navigationStackCount = navigationStack.length;\r\n\r\n    return navigationStackCount\r\n      ? navigationStack[navigationStackCount - 1].struct\r\n      : this.state.options.struct;\r\n  }\r\n\r\n  get block() {\r\n    const { navigationStack } = this.state;\r\n    const navigationStackCount = navigationStack.length;\r\n\r\n    return navigationStackCount\r\n      ? navigationStack[navigationStackCount - 1].block\r\n      : this.state.options.block;\r\n  }\r\n\r\n  get form() {\r\n    const { navigationStack } = this.state;\r\n    const navigationStackCount = navigationStack.length;\r\n\r\n    return navigationStackCount\r\n      ? this.state.form.get(navigationStack[navigationStackCount - 1].path)\r\n      : this.state.form;\r\n  }\r\n\r\n  get parentPath() {\r\n    const { navigationStack } = this.state;\r\n    const navigationStackCount = navigationStack.length;\r\n\r\n    return navigationStackCount\r\n      ? navigationStack[navigationStackCount - 1].parentPath\r\n      : null;\r\n  }\r\n\r\n  get parentForm(): (AbstractControl | null) {\r\n    const { navigationStack } = this.state;\r\n    const navigationStackCount = navigationStack.length;\r\n\r\n    return navigationStackCount\r\n      ? this.state.form.get(navigationStack[navigationStackCount - 1].parentPath)\r\n      : null;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.state = this.stateService.create(this.options, this.value, this.errors);\r\n    this.update();\r\n\r\n    this._navigationChangeSubscription = this.state.onNavigationChange.subscribe(() => {\r\n      this.update();\r\n    });\r\n\r\n    this._formChangeSubscription = this.state.onValueChange.subscribe((change) => {\r\n      this.valueChange.emit(change);\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value && !changes.value.firstChange) {\r\n      this.stateService.update(this.state.id, changes.value.currentValue);\r\n    }\r\n\r\n    if (changes.errors && !changes.errors.firstChange) {\r\n      this.stateService.setErrors(this.state.id, changes.errors.currentValue);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._navigationChangeSubscription) {\r\n      this._navigationChangeSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this._formChangeSubscription) {\r\n      this._formChangeSubscription.unsubscribe();\r\n    }\r\n\r\n    this.stateService.remove(this.state.id);\r\n  }\r\n\r\n  update() {\r\n    const { options, navigationStack } = this.state;\r\n\r\n    let struct;\r\n    let block;\r\n\r\n    const child = navigationStack[navigationStack.length - 1];\r\n    if (child) {\r\n      ({ struct, block } = child);\r\n    } else {\r\n      ({ struct, block } = options);\r\n    }\r\n\r\n    const blockFields = this.getBlockFields(struct, block);\r\n\r\n    this.fields = blockFields;\r\n  }\r\n\r\n  getBlockFields(struct: string, blockName: string) {\r\n    const { blocks, fields } = this.state;\r\n    if (!blocks || !fields) {\r\n       // TODO: Log error\r\n      return [];\r\n    }\r\n\r\n    const block = blocks[`${struct}-${blockName}`];\r\n\r\n    if (!block) {\r\n      // TODO: Log error\r\n      return [];\r\n    }\r\n\r\n    const references = block.fields;\r\n\r\n    const blockFields = [];\r\n\r\n    for (const reference of references) {\r\n      blockFields.push(fields[`${struct}-${reference.field}`]);\r\n    }\r\n\r\n    return blockFields;\r\n  }\r\n\r\n  onCancel(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    if (!this.cancelEnabled) {\r\n      return;\r\n    }\r\n\r\n    if (this.state.navigationStack.length) {\r\n      this.stateService.popNavigation(this.state.id);\r\n      return;\r\n    }\r\n\r\n    this.cancel.emit();\r\n    this.state.form.reset();\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    if (!this.submitEnabled) {\r\n      return;\r\n    }\r\n\r\n    if (this.state.navigationStack.length) {\r\n      this.stateService.completeNavigation(this.state.id);\r\n      return;\r\n    }\r\n\r\n    this.submitting = true;\r\n\r\n    this.submit.emit({\r\n      value: this.state.form.value,\r\n      onComplete: (errors) => {\r\n        if (!errors) {\r\n          this.stateService.clearErrors(this.state.id);\r\n          this.state.form.reset();\r\n        } else {\r\n          this.stateService.setErrors(this.state.id, errors);\r\n        }\r\n\r\n        this.submitting = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { DeReCrudCoreModule } from '../core/core.module';\r\nimport { FormComponent } from './form/form.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DeReCrudCoreModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    FormComponent\r\n  ],\r\n  exports: [FormComponent]\r\n})\r\nexport class DeReCrudFormsModule { }\r\n","import { IControl } from './renderers/control.renderer';\r\n\r\n// @dynamic\r\nexport class ValidationErrorHelper {\r\n  private static _errorSort = ['required'];\r\n\r\n  private static getFormControlIfErrorFound(control: IControl) {\r\n    const formControl = control.form.get(control.field.name);\r\n\r\n    if (\r\n      (!formControl.errors || !formControl.touched) &&\r\n      !control.submissionErrors.length\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    return formControl;\r\n  }\r\n\r\n  static hasError(control: IControl) {\r\n    return !!this.getFormControlIfErrorFound(control);\r\n  }\r\n\r\n  static getErrors(control: IControl) {\r\n    const formControl = this.getFormControlIfErrorFound(control);\r\n    if (!formControl) {\r\n      return null;\r\n    }\r\n\r\n    const sortedErrors = [];\r\n    const unsortedErrors = [];\r\n\r\n    if (formControl.errors && formControl.touched) {\r\n      for (const key of Object.keys(formControl.errors)) {\r\n        const sort = this._errorSort[key];\r\n        const metadata = formControl.errors[key];\r\n\r\n        if (typeof sort === 'undefined') {\r\n          unsortedErrors.push({ key, metadata });\r\n        } else {\r\n          sortedErrors.push({ key, metadata, sort });\r\n        }\r\n      }\r\n    }\r\n\r\n    return sortedErrors\r\n      .sort(x => x.sort)\r\n      .concat(unsortedErrors)\r\n      .map(this.getErrorMessage)\r\n      .concat(control.submissionErrors);\r\n  }\r\n\r\n  static getErrorMessage(error: { key: string; metadata: any }) {\r\n    switch (error.key) {\r\n      case 'required':\r\n        return 'This field is required.';\r\n      case 'minlength':\r\n        return `This field must have at least ${\r\n          error.metadata.requiredLength\r\n        } characters.`;\r\n      case 'maxlength':\r\n        return `This field can not exceed ${\r\n          error.metadata.requiredLength\r\n        } characters.`;\r\n      default:\r\n        return `Validation failed with error: ${error}`;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlRenderer, IControl } from '../../../core/renderers/control.renderer';\r\nimport { ValidationErrorHelper } from '../../../core/validation-error-helper';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-control-container-renderer',\r\n  template: `<div class=\"form-group\" [ngClass]=\"getClasses()\">\r\n  <ng-content></ng-content>\r\n</div>\r\n`\r\n})\r\nexport class Bootstrap3ControlContainerRendererComponent implements ControlRenderer {\r\n  @Input() control: IControl;\r\n\r\n  getClasses() {\r\n    const hasError = ValidationErrorHelper.hasError(this.control);\r\n\r\n    return {\r\n      'has-error': hasError,\r\n      'has-feedback': hasError\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DeReCrudProviderService } from './provider.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [DeReCrudProviderService],\r\n  declarations: []\r\n})\r\nexport class DeReCrudProviderModule {}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlRenderer, IControl } from '../../../core/renderers/control.renderer';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-input-renderer',\r\n  template: `<ng-container [formGroup]=\"control.form\">\r\n  <de-re-crud-bootstrap3-label-renderer [control]=\"control\">\r\n  </de-re-crud-bootstrap3-label-renderer>\r\n  <input class=\"form-control\"\r\n         [type]=\"control.rendererType\"\r\n         [id]=\"control.htmlId\"\r\n         [name]=\"control.field.name\"\r\n         [formControlName]=\"control.field.name\"\r\n         (focus)=\"control.onFocus($event)\"\r\n         (blur)=\"control.onBlur($event)\"\r\n         (input)=\"control.onChange($event)\" />\r\n  <de-re-crud-bootstrap3-help-renderer [control]=\"control\">\r\n  </de-re-crud-bootstrap3-help-renderer>\r\n  <de-re-crud-bootstrap3-validation-errors-renderer [control]=\"control\">\r\n  </de-re-crud-bootstrap3-validation-errors-renderer>\r\n</ng-container>\r\n`\r\n})\r\nexport class Bootstrap3InputRendererComponent implements ControlRenderer {\r\n  @Input() control: IControl;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlRenderer, ISelectControl } from '../../../core/renderers/control.renderer';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-select-renderer',\r\n  template: `<ng-container [formGroup]=\"control.form\">\r\n  <de-re-crud-bootstrap3-label-renderer [control]=\"control\"></de-re-crud-bootstrap3-label-renderer>\r\n  <select class=\"form-control\"\r\n          [id]=\"control.htmlId\"\r\n          [name]=\"control.field.name\"\r\n          [formControlName]=\"control.field.name\"\r\n          (focus)=\"control.onFocus($event)\"\r\n          (blur)=\"control.onBlur($event)\"\r\n          (change)=\"control.onChange($event)\">\r\n    <option *ngFor=\"let option of control.options\" [value]=\"option.value\">{{option.label}}</option>\r\n  </select>\r\n  <de-re-crud-bootstrap3-help-renderer [control]=\"control\">\r\n  </de-re-crud-bootstrap3-help-renderer>\r\n  <de-re-crud-bootstrap3-validation-errors-renderer [control]=\"control\">\r\n  </de-re-crud-bootstrap3-validation-errors-renderer>\r\n</ng-container>\r\n`\r\n})\r\nexport class Bootstrap3SelectRendererComponent implements ControlRenderer {\r\n  @Input() control: ISelectControl;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlRenderer, IControl } from '../../../core/renderers/control.renderer';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-label-renderer',\r\n  template: `<label class=\"control-label\" [htmlFor]=\"control.htmlId\">{{control.field.label}}</label>\r\n`\r\n})\r\nexport class Bootstrap3LabelRendererComponent implements ControlRenderer {\r\n  @Input() control: IControl;\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  Input,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { ButtonRenderer, IButton } from '../../../core/renderers/button.renderer';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-button-renderer',\r\n  template: `<button class=\"btn\" [ngClass]=\"classes\"\r\n        [type]=\"button.type\"\r\n        [disabled]=\"button.disabled\"\r\n        (click)=\"button.onClick($event)\">\r\n  {{button.text}}\r\n</button>\r\n`\r\n})\r\nexport class Bootstrap3ButtonRendererComponent implements OnInit, OnChanges, ButtonRenderer {\r\n  @Input() button: IButton;\r\n  _classes: string[];\r\n\r\n  get classes() {\r\n    let classes: string[];\r\n\r\n    if (this._classes) {\r\n      classes = this._classes;\r\n    }\r\n\r\n    if (this.button.extraClasses) {\r\n      classes = (classes || []).concat(this.button.extraClasses);\r\n    }\r\n\r\n    return classes;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateClasses();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.button) {\r\n      if (\r\n        changes.button.currentValue.type !==\r\n        changes.button.previousValue.type\r\n      ) {\r\n        this.updateClasses();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateClasses() {\r\n    if (this.button.class) {\r\n      this._classes = [this.button.class];\r\n      return;\r\n    }\r\n\r\n    switch (this.button.type) {\r\n      case 'submit':\r\n        this._classes = ['btn-primary'];\r\n        break;\r\n      default:\r\n        this._classes = ['btn-default'];\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { CollectionControlRenderer, ICollectionControl } from '../../../core/renderers/control.renderer';\r\nimport { IField } from '../../../core/models/schema';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-table-renderer',\r\n  template: `<div>\r\n  <de-re-crud-stamp-renderer [stamp]=\"control.stamp\">\r\n  </de-re-crud-stamp-renderer>\r\n  <de-re-crud-button-host\r\n    [formId]=\"control.formId\"\r\n    extraClasses=\"btn-sm\"\r\n    text=\"Add\"\r\n    (click)=\"control.onAdd($event)\">\r\n  </de-re-crud-button-host>\r\n</div>\r\n\r\n<div class=\"table-control-container\">\r\n  <table class=\"table table-bordered table-condensed\">\r\n    <thead>\r\n      <tr>\r\n        <th *ngFor=\"let field of control.nestedFields\">\r\n          {{field.label}}\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngIf=\"!control.nestedValues.length\">\r\n        <td colspan=\"100%\">None</td>\r\n      </tr>\r\n      <tr *ngFor=\"let form of control.nestedValues\">\r\n        <td *ngFor=\"let field of control.nestedFields\" [innerHtml]=\"getValue(field, form.value)\"></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n`,\r\n  styles: [`.table-control-container{margin-top:10px}`]\r\n})\r\nexport class Bootstrap3TableRendererComponent implements CollectionControlRenderer {\r\n  @Input() control: ICollectionControl;\r\n\r\n  getValue(field: IField, value: any) {\r\n    const fieldValue = value[field.name];\r\n\r\n    if (fieldValue == null || typeof fieldValue === 'undefined') {\r\n      return '&nbsp;';\r\n    }\r\n\r\n    return fieldValue;\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlRenderer, IControl } from '../../../core/renderers/control.renderer';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-checkbox-renderer',\r\n  template: `<ng-container [formGroup]=\"control.form\">\r\n  <div class=\"checkbox\">\r\n    <label [htmlFor]=\"control.htmlId\">\r\n      <input type=\"checkbox\"\r\n        [id]=\"control.htmlId\"\r\n        [name]=\"control.field.name\"\r\n        [formControlName]=\"control.field.name\"\r\n        (focus)=\"control.onFocus($event)\"\r\n        (blur)=\"control.onBlur($event)\"\r\n        (input)=\"control.onChange($event)\" /> {{control.field.label}}\r\n    </label>\r\n  </div>\r\n  <de-re-crud-bootstrap3-help-renderer [control]=\"control\">\r\n  </de-re-crud-bootstrap3-help-renderer>\r\n  <de-re-crud-bootstrap3-validation-errors-renderer [control]=\"control\">\r\n  </de-re-crud-bootstrap3-validation-errors-renderer>\r\n</ng-container>\r\n`\r\n})\r\nexport class Bootstrap3CheckboxRendererComponent implements ControlRenderer {\r\n  @Input() control: IControl;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { SelectControlRenderer, ISelectControl } from '../../../core/renderers/control.renderer';\r\nimport { ValidationErrorHelper } from '../../../core/validation-error-helper';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-help-renderer',\r\n  template: `<p *ngIf=\"control.field.help && !hasError()\" class=\"help-block\">{{control.field.help}}</p>\r\n`\r\n})\r\nexport class Bootstrap3HelpRendererComponent implements SelectControlRenderer {\r\n  @Input() control: ISelectControl;\r\n\r\n  hasError() {\r\n    return ValidationErrorHelper.hasError(this.control);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlRenderer, IControl } from '../../../core/renderers/control.renderer';\r\nimport { ValidationErrorHelper } from '../../../core/validation-error-helper';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-validation-errors-renderer',\r\n  template: `<ng-container *ngIf=\"hasError()\"\r\n  [ngTemplateOutlet]=\"validationErrors\"\r\n  [ngTemplateOutletContext]=\"{ errors: getErrors() }\">\r\n</ng-container>\r\n\r\n<ng-template #validationErrors let-errors=\"errors\">\r\n  <ng-container>\r\n    <p *ngFor=\"let error of errors\" class=\"help-block\">\r\n      {{error}}\r\n    </p>\r\n  </ng-container>\r\n</ng-template>\r\n`\r\n})\r\nexport class Bootstrap3ValidationErrorsRendererComponent implements ControlRenderer {\r\n  @Input() control: IControl;\r\n\r\n  hasError() {\r\n    return ValidationErrorHelper.hasError(this.control);\r\n  }\r\n\r\n  getErrors() {\r\n    return ValidationErrorHelper.getErrors(this.control);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { CollectionControlRenderer, ICollectionControl } from '../../../core/renderers/control.renderer';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-inline-renderer',\r\n  template: `<div>\r\n  <de-re-crud-stamp-renderer [stamp]=\"control.stamp\">\r\n  </de-re-crud-stamp-renderer>\r\n  <de-re-crud-button-host\r\n    *ngIf=\"control.canAdd\"\r\n    [formId]=\"control.formId\"\r\n    extraClasses=\"btn-sm\"\r\n    text=\"Add\"\r\n    (click)=\"control.onAdd($event)\">\r\n  </de-re-crud-button-host>\r\n</div>\r\n\r\n<div class=\"inline-control-container\">\r\n  <span *ngIf=\"!control.nestedValues.length\">None</span>\r\n  <div *ngFor=\"let value of control.nestedValues\">\r\n    <de-re-crud-form-host\r\n      [formId]=\"control.formId\"\r\n      [form]=\"value\"\r\n      [parentPath]=\"control.formPath\"\r\n      [parentForm]=\"control.value\"\r\n      [fields]=\"control.nestedFields\"\r\n      [struct]=\"control.field.reference.struct\"\r\n      [block]=\"control.field.reference.block\">\r\n    </de-re-crud-form-host>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`.inline-control-container{margin-top:10px;margin-bottom:10px}`]\r\n})\r\nexport class Bootstrap3InlineRendererComponent implements CollectionControlRenderer {\r\n  control: ICollectionControl;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { StampRenderer, IStamp } from '../../../core/renderers/stamp.renderer';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-stamp-renderer',\r\n  template: `<ng-container [ngSwitch]=\"stamp.headerSize\">\r\n  <h1 *ngSwitchCase=\"1\" [ngClass]=\"stamp.classes\">{{stamp.text}}</h1>\r\n  <h2 *ngSwitchCase=\"2\" [ngClass]=\"stamp.classes\">{{stamp.text}}</h2>\r\n  <h3 *ngSwitchCase=\"3\" [ngClass]=\"stamp.classes\">{{stamp.text}}</h3>\r\n  <h4 *ngSwitchCase=\"4\" [ngClass]=\"stamp.classes\">{{stamp.text}}</h4>\r\n  <h5 *ngSwitchCase=\"5\" [ngClass]=\"stamp.classes\">{{stamp.text}}</h5>\r\n  <h6 *ngSwitchCase=\"6\" [ngClass]=\"stamp.classes\">{{stamp.text}}</h6>\r\n  <p *ngSwitchDefault [ngClass]=\"stamp.classes\">{{stamp.text}}</p>\r\n</ng-container>\r\n`\r\n})\r\nexport class Bootstrap3StampRendererComponent implements StampRenderer {\r\n  @Input() stamp: IStamp;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { Bootstrap3ControlContainerRendererComponent } from './control-container-renderer/control-container-renderer.component';\r\nimport { DeReCrudCoreModule } from '../../core/core.module';\r\nimport { DeReCrudProviderModule } from '../provider/provider.module';\r\nimport { DeReCrudProviderService } from '../provider/provider.service';\r\nimport { Bootstrap3InputRendererComponent } from './input-renderer/input-renderer.component';\r\nimport { Bootstrap3SelectRendererComponent } from './select-renderer/select-renderer.component';\r\nimport { Bootstrap3LabelRendererComponent } from './label-renderer/label-renderer.component';\r\nimport { Bootstrap3ButtonRendererComponent } from './button-renderer/button-renderer.component';\r\nimport { Bootstrap3TableRendererComponent } from './table-renderer/table-renderer.component';\r\nimport { Bootstrap3CheckboxRendererComponent } from './checkbox-renderer/checkbox-renderer.component';\r\nimport { Bootstrap3HelpRendererComponent } from './help-renderer/help-renderer.component';\r\nimport { Bootstrap3ValidationErrorsRendererComponent } from './validation-errors-renderer/validation-errors-renderer.component';\r\nimport { Bootstrap3InlineRendererComponent } from './inline-renderer/inline-renderer.component';\r\nimport { Bootstrap3StampRendererComponent } from './stamp-renderer/stamp-renderer.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, DeReCrudCoreModule, DeReCrudProviderModule],\r\n  declarations: [\r\n    Bootstrap3ControlContainerRendererComponent,\r\n    Bootstrap3InputRendererComponent,\r\n    Bootstrap3SelectRendererComponent,\r\n    Bootstrap3LabelRendererComponent,\r\n    Bootstrap3ButtonRendererComponent,\r\n    Bootstrap3InlineRendererComponent,\r\n    Bootstrap3TableRendererComponent,\r\n    Bootstrap3CheckboxRendererComponent,\r\n    Bootstrap3HelpRendererComponent,\r\n    Bootstrap3ValidationErrorsRendererComponent,\r\n    Bootstrap3StampRendererComponent\r\n  ],\r\n  entryComponents: [\r\n    Bootstrap3ControlContainerRendererComponent,\r\n    Bootstrap3InputRendererComponent,\r\n    Bootstrap3SelectRendererComponent,\r\n    Bootstrap3ButtonRendererComponent,\r\n    Bootstrap3InlineRendererComponent,\r\n    Bootstrap3TableRendererComponent,\r\n    Bootstrap3CheckboxRendererComponent,\r\n    Bootstrap3StampRendererComponent\r\n  ]\r\n})\r\nexport class Bootstrap3DeReCrudProviderModule {\r\n  constructor(providerService: DeReCrudProviderService) {\r\n    providerService.register('bootstrap3', {\r\n      stampComponent: Bootstrap3StampRendererComponent,\r\n      containerComponent: Bootstrap3ControlContainerRendererComponent,\r\n      inputComponent: Bootstrap3InputRendererComponent,\r\n      selectComponent: Bootstrap3SelectRendererComponent,\r\n      buttonComponent: Bootstrap3ButtonRendererComponent,\r\n      tableComponent: Bootstrap3TableRendererComponent,\r\n      inlineComponent: Bootstrap3InlineRendererComponent,\r\n      checkboxComponent: Bootstrap3CheckboxRendererComponent\r\n    });\r\n  }\r\n}\r\n"],"names":["Directive","ViewContainerRef","Injectable","tslib_1.__values","FormGroup","Validators","FormBuilder","Subject","Component","ComponentFactoryResolver","ViewChild","Input","FormArray","EventEmitter","Output","NgModule","CommonModule","ReactiveFormsModule"],"mappings":"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"}
