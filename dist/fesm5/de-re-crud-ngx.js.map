{"version":3,"file":"de-re-crud-ngx.js.map","sources":["ng://@de-re-crud/ngx/src/app/core/hosts/component-host.directive.ts","ng://@de-re-crud/ngx/src/app/providers/provider/provider.service.ts","ng://@de-re-crud/ngx/src/app/core/validators/whitespace-validator.ts","ng://@de-re-crud/ngx/src/app/core/services/form-builder.service.ts","ng://@de-re-crud/ngx/src/app/core/services/form-state.service.ts","ng://@de-re-crud/ngx/src/app/core/hosts/collection-field-host.component.ts","ng://@de-re-crud/ngx/src/app/core/hosts/input-field-host.component.ts","ng://@de-re-crud/ngx/src/app/core/hosts/button-host.component.ts","ng://@de-re-crud/ngx/src/app/core/hosts/stamp-field-host.component.ts","ng://@de-re-crud/ngx/src/app/core/hosts/form-host/form-host.component.ts","ng://@de-re-crud/ngx/src/app/core/core.module.ts","ng://@de-re-crud/ngx/src/app/forms/form/form.component.ts","ng://@de-re-crud/ngx/src/app/forms/forms.module.ts","ng://@de-re-crud/ngx/src/app/core/validation-error-helper.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/control-container-renderer/control-container-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/provider/provider.module.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/input-renderer/input-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/select-renderer/select-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/label-renderer/label-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/button-renderer/button-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/table-renderer/table-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/checkbox-renderer/checkbox-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/help-renderer/help-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/validation-errors-renderer/validation-errors-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/inline-renderer/inline-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/stamp-renderer/stamp-renderer.component.ts","ng://@de-re-crud/ngx/src/app/providers/bootstrap3/bootstrap3.module.ts"],"sourcesContent":["import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[deReCrudComponentHost]'\r\n})\r\nexport class ComponentHostDirective {\r\n  constructor(public viewContainerRef: ViewContainerRef) {}\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { DeReCrudProviderOptions } from './provider-options';\r\n\r\n@Injectable()\r\nexport class DeReCrudProviderService {\r\n  private _cache: { [name: string]: DeReCrudProviderOptions } = {};\r\n\r\n  register(name: string, options: DeReCrudProviderOptions) {\r\n    this._cache[name] = options;\r\n  }\r\n\r\n  get(name: string): DeReCrudProviderOptions {\r\n    const options = this._cache[name];\r\n    if (!options) {\r\n      throw new Error(`Provider '${name}' is not registered. Make sure register(name, options) is called in the applicatio root.`);\r\n    }\r\n\r\n    return options;\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport const whitespaceValidator = (control: AbstractControl) => {\r\n  const isWhiteSpace = (control.value || '').trim().length === 0;\r\n\r\n  return !isWhiteSpace ? null : { required: true };\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray\r\n} from '@angular/forms';\r\nimport {\r\n  IField,\r\n  ITextField,\r\n  ILinkedStructField,\r\n  IBlock,\r\n  IIntegerField,\r\n  IFieldReference\r\n} from '../models/schema';\r\nimport { whitespaceValidator } from '../validators/whitespace-validator';\r\n\r\n@Injectable()\r\nexport class FormBuilderService {\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  group(\r\n    struct: string,\r\n    blockName: string,\r\n    blocks: Map<string, IBlock>,\r\n    fields: Map<string, IField>,\r\n    value = {}\r\n  ): FormGroup {\r\n    const group = {};\r\n    const block = blocks[`${struct}-${blockName}`];\r\n\r\n    for (const fieldReference of block.fields) {\r\n      const field = fields[`${struct}-${fieldReference.field}`];\r\n\r\n      if (field.type === 'stamp') {\r\n        continue;\r\n      }\r\n\r\n      if (field.type === 'linkedStruct') {\r\n        const linkedStructField = <ILinkedStructField>field;\r\n        const { reference } = linkedStructField;\r\n\r\n        const array = this.array(\r\n          reference.struct,\r\n          reference.block,\r\n          blocks,\r\n          fields,\r\n          value[field.name]\r\n        );\r\n\r\n        if (!array.value.length && linkedStructField.minInstances > 0) {\r\n          // tslint:disable-next-line:no-increment-decrement\r\n          for (let i = 0; i < linkedStructField.minInstances; i++) {\r\n            array.push(this.group(reference.struct, reference.block, blocks, fields));\r\n          }\r\n        }\r\n\r\n        group[field.name] = array;\r\n\r\n        continue;\r\n      }\r\n\r\n      const validators = this.getValidators(fieldReference, field);\r\n      const initialValue = value[field.name] || field.initialValue;\r\n\r\n      group[field.name] = [initialValue, validators];\r\n    }\r\n\r\n    const formGroup = this.fb.group(group);\r\n\r\n    if (!formGroup.value) {\r\n      formGroup.patchValue({});\r\n    }\r\n\r\n    return formGroup;\r\n  }\r\n\r\n  array(\r\n    struct: string,\r\n    blockName: string,\r\n    blocks: Map<string, IBlock>,\r\n    fields: Map<string, IField>,\r\n    value = []\r\n  ): FormArray {\r\n    const array = [];\r\n\r\n    if (value && value.length) {\r\n      value.forEach((item) => {\r\n        const group = this.group(struct, blockName, blocks, fields, item);\r\n\r\n        array.push(group);\r\n      });\r\n    }\r\n\r\n    const formArray = this.fb.array(array);\r\n    if (!formArray.value) {\r\n      formArray.setValue([]);\r\n    }\r\n\r\n    return formArray;\r\n  }\r\n\r\n\r\n\r\n  private getValidators(fieldReference: IFieldReference, field: IField) {\r\n    return (control: AbstractControl) => {\r\n      const validators = [];\r\n\r\n      const root = control.root;\r\n      const parent = control.parent;\r\n\r\n      if (\r\n        parent instanceof FormGroup &&\r\n        !fieldReference.condition(parent.value, root.value)\r\n      ) {\r\n        return null;\r\n      }\r\n\r\n      if (field.required) {\r\n        validators.push(Validators.required, whitespaceValidator);\r\n      }\r\n\r\n      if ((<ITextField>field).minLength) {\r\n        validators.push(Validators.minLength((<ITextField>field).minLength));\r\n      }\r\n\r\n      if ((<ITextField>field).maxLength) {\r\n        validators.push(Validators.maxLength((<ITextField>field).maxLength));\r\n      }\r\n\r\n      if ((<IIntegerField>field).min) {\r\n        validators.push(Validators.min((<IIntegerField>field).min));\r\n      }\r\n\r\n      if ((<IIntegerField>field).max) {\r\n        validators.push(Validators.max((<IIntegerField>field).max));\r\n      }\r\n\r\n      if (!validators.length) {\r\n        return null;\r\n      }\r\n\r\n      return Validators.compose(validators)(control);\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { DeReCrudOptions } from '../models/options';\r\nimport { IStruct, IField, IBlock } from '../models/schema';\r\nimport { FormSubmissionErrors } from '../models/form-submission';\r\nimport { FormBuilderService } from './form-builder.service';\r\nimport { FormChange } from '../models/form-change';\r\nimport { FormState } from '../models/form-state';\r\n\r\nexport type GetKeyFunction<T> = (item: T) => string;\r\n\r\n@Injectable()\r\n// @dynamic\r\nexport class FormStateService {\r\n  // tslint:disable-next-line:no-function-constructor-with-string-args\r\n  private static defaultConditionFunc = new Function('return true');\r\n  private _cache: { [id: number]: FormState } = {};\r\n\r\n  constructor(private formBuilder: FormBuilderService) {}\r\n\r\n  static generateId() {\r\n    return Math.random();\r\n  }\r\n\r\n  static assignDefaults(options: DeReCrudOptions) {\r\n    if (!options.headerSize) {\r\n      options.headerSize = 3;\r\n    }\r\n  }\r\n\r\n  // TODO: This should expand strings into a label object; the renderers should handle which label to show based on screen size\r\n  static parseLabel(label: string | { short: string }) {\r\n    if (typeof label === 'string') {\r\n      return label;\r\n    }\r\n\r\n    return label.short;\r\n  }\r\n\r\n  static parseSchema(options: DeReCrudOptions) {\r\n    const structs: IStruct[] = [];\r\n    const fields: IField[] = [];\r\n    const blocks: IBlock[] = [];\r\n\r\n    for (const structSchema of options.schema) {\r\n      const struct = {\r\n        ...structSchema,\r\n        label: this.parseLabel(structSchema.label),\r\n        collectionLabel: this.parseLabel(structSchema.label),\r\n        fields: [],\r\n        blocks: []\r\n      };\r\n\r\n      for (const fieldSchema of structSchema.fields) {\r\n        const label = this.parseLabel(fieldSchema.label);\r\n\r\n        const field = {\r\n          ...fieldSchema,\r\n          label,\r\n          placeholder: fieldSchema.placeholder || label,\r\n          struct: structSchema.name\r\n        };\r\n\r\n        if (field.reference && !field.reference.block) {\r\n          field.reference.block = 'default';\r\n        }\r\n\r\n        fields.push(field);\r\n        struct.fields.push(field.name);\r\n      }\r\n\r\n      for (const blockSchema of structSchema.blocks) {\r\n        const block = {\r\n          ...blockSchema,\r\n          fields: [],\r\n          struct: structSchema.name\r\n        };\r\n\r\n        for (const reference of blockSchema.fields) {\r\n          if (!reference) {\r\n            continue;\r\n          }\r\n\r\n          const fieldReference = reference.field\r\n            ? reference\r\n            : { field: reference };\r\n\r\n          let condition;\r\n\r\n          if (fieldReference.condition) {\r\n            const returnValue =\r\n              fieldReference.condition[0] === '{'\r\n                ? fieldReference.condition\r\n                : `return ${fieldReference.condition}`;\r\n\r\n            // tslint:disable-next-line:no-function-constructor-with-string-args\r\n            condition = new Function('value', 'rootValue', returnValue);\r\n          } else {\r\n            // tslint:disable-next-line:no-function-constructor-with-string-args\r\n            condition = FormStateService.defaultConditionFunc;\r\n          }\r\n\r\n          fieldReference.condition = condition;\r\n          block.fields.push(fieldReference);\r\n        }\r\n\r\n        blocks.push(block);\r\n        struct.blocks.push(block.name);\r\n      }\r\n\r\n      structs.push(struct);\r\n    }\r\n\r\n    return {\r\n      structs,\r\n      fields,\r\n      blocks\r\n    };\r\n  }\r\n\r\n  get(id: number): FormState {\r\n    return this._cache[id];\r\n  }\r\n\r\n  create(options: DeReCrudOptions, value: object, initialErrors?: FormSubmissionErrors): FormState {\r\n    let id: number;\r\n\r\n    while (true) {\r\n      id = FormStateService.generateId();\r\n\r\n      if (this._cache[id]) {\r\n        continue;\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    FormStateService.assignDefaults(options);\r\n\r\n    const schema = FormStateService.parseSchema(options);\r\n    const structs = this.arrayToMap(struct => struct.name, schema.structs);\r\n    const fields = this.arrayToMap(\r\n      field => `${field.struct}-${field.name}`,\r\n      schema.fields\r\n    );\r\n\r\n    const blocks = this.arrayToMap(\r\n      block => `${block.struct}-${block.name}`,\r\n      schema.blocks\r\n    );\r\n\r\n    const form = this.formBuilder.group(\r\n      options.struct,\r\n      options.block,\r\n      blocks,\r\n      fields,\r\n      value\r\n    );\r\n\r\n    const state: FormState = {\r\n      id,\r\n      options,\r\n      form,\r\n      structs,\r\n      fields,\r\n      blocks,\r\n      submissionErrors: initialErrors,\r\n      onSubmissionErrorsChange: new Subject<FormSubmissionErrors>(),\r\n      navigationStack: [],\r\n      onNavigationChange: new Subject<number>(),\r\n      onValueChange: new Subject<FormChange>()\r\n    };\r\n\r\n    this._cache[id] = state;\r\n\r\n    return state;\r\n  }\r\n\r\n  createForm(formId: number, struct: string, block: string): FormGroup {\r\n    if (!this._cache[formId]) {\r\n      return;\r\n    }\r\n\r\n    const { fields, blocks } = this._cache[formId];\r\n    return this.formBuilder.group(struct, block, blocks, fields);\r\n  }\r\n\r\n  update(id: number, value: object) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    const { form } = this._cache[id];\r\n\r\n    form.patchValue(value);\r\n  }\r\n\r\n  remove(id: number) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    delete this._cache[id];\r\n  }\r\n\r\n  clearErrors(id: number, formPath?: string) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    if (formPath) {\r\n      delete this._cache[id].submissionErrors[formPath];\r\n    } else {\r\n      this._cache[id].submissionErrors = {};\r\n    }\r\n\r\n    this.pushSubmissionErrorsChange(id);\r\n  }\r\n\r\n  setErrors(id: number, errors: FormSubmissionErrors) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    this._cache[id].submissionErrors = errors;\r\n    this.pushSubmissionErrorsChange(id);\r\n  }\r\n\r\n  onChange(id: number, formPath: string, newValue: any, event: string) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    const state = this._cache[id];\r\n    this.clearErrors(id, formPath);\r\n\r\n    if (event && state.options.changeNotificationType !== event) {\r\n      return;\r\n    }\r\n\r\n    (<Subject<FormChange>>state.onValueChange).next({\r\n      fieldPath: formPath,\r\n      value: newValue,\r\n      formValue: state.form.value\r\n    });\r\n  }\r\n\r\n  pushNavigation(id: number, struct: string, block: string, path: string, parentPath: string) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    this._cache[id].navigationStack.push({\r\n      struct,\r\n      block,\r\n      path,\r\n      parentPath\r\n    });\r\n\r\n    this.pushNavigationChange(id);\r\n  }\r\n\r\n  popNavigation(id: number) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    this._cache[id].navigationStack.pop();\r\n\r\n    this.pushNavigationChange(id);\r\n  }\r\n\r\n  completeNavigation(id: number) {\r\n    if (!this._cache[id]) {\r\n      return;\r\n    }\r\n\r\n    this.popNavigation(id);\r\n  }\r\n\r\n  private pushNavigationChange(id: number, childId?: number) {\r\n    const state = this._cache[id];\r\n    (<Subject<number>>state.onNavigationChange).next(childId);\r\n  }\r\n\r\n  private pushSubmissionErrorsChange(id: number) {\r\n    const state = this._cache[id];\r\n    (<Subject<FormSubmissionErrors>>state.onSubmissionErrorsChange).next(\r\n      state.submissionErrors\r\n    );\r\n  }\r\n\r\n  private arrayToMap<T>(getKey: GetKeyFunction<T>, array: T[]) {\r\n    return array.reduce<Map<string, T>>((acc, current) => {\r\n      acc[getKey(current)] = current;\r\n      return acc;\r\n    }, new Map<string, T>());\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ComponentFactoryResolver,\r\n  SimpleChanges,\r\n  OnDestroy,\r\n  ComponentRef,\r\n  ViewChild,\r\n  OnChanges,\r\n  SimpleChange\r\n} from '@angular/core';\r\nimport { CollectionControlRenderer, ICollectionControl } from '../renderers/control.renderer';\r\nimport { IReferenceField } from '../models/schema';\r\nimport { FormState } from '../models/form-state';\r\nimport { FormStateService } from '../services/form-state.service';\r\nimport { DeReCrudProviderService } from '../../providers/provider/provider.service';\r\nimport { ComponentHostDirective } from './component-host.directive';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-collection-field-host',\r\n  template: `<ng-template deReCrudComponentHost></ng-template>`\r\n})\r\nexport class CollectionFieldHostComponent implements OnInit, OnChanges, OnDestroy, CollectionControlRenderer {\r\n  private _componentRef: ComponentRef<any>;\r\n  @ViewChild(ComponentHostDirective) componentHost: ComponentHostDirective;\r\n  @Input() control: ICollectionControl;\r\n  state: FormState;\r\n\r\n  constructor(\r\n    private stateService: FormStateService,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private providerService: DeReCrudProviderService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.state = this.stateService.get(this.control.formId);\r\n    this.render();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.control && !changes.control.firstChange) {\r\n      this.updateInputs();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._componentRef) {\r\n      this._componentRef.destroy();\r\n      this._componentRef = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this._componentRef) {\r\n      this._componentRef.destroy();\r\n      this._componentRef = null;\r\n    }\r\n\r\n    let controlComponent: any;\r\n\r\n    const providerOptions = this.providerService.get(\r\n      this.state.options.provider\r\n    );\r\n\r\n    switch (this.control.layout) {\r\n      case 'inline':\r\n        controlComponent = providerOptions.inlineComponent;\r\n        break;\r\n      case 'table':\r\n        controlComponent = providerOptions.tableComponent;\r\n        break;\r\n      default:\r\n        console.error(\r\n          `${this.control.layout} layout is not supported.`,\r\n          JSON.stringify(this.control.field)\r\n        );\r\n        return;\r\n    }\r\n\r\n    const viewContainerRef = this.componentHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\r\n      controlComponent\r\n    );\r\n\r\n    this._componentRef = viewContainerRef.createComponent(componentFactory);\r\n\r\n    this.updateInputs();\r\n  }\r\n\r\n  updateInputs() {\r\n    if (!this._componentRef) {\r\n      return;\r\n    }\r\n\r\n    const componentRenderer = <CollectionControlRenderer>this._componentRef.instance;\r\n\r\n    const control: ICollectionControl = {\r\n      ...this.control,\r\n      onAdd: this.onAdd\r\n    };\r\n\r\n    const previousControl = componentRenderer.control;\r\n    componentRenderer.control = control;\r\n\r\n    const onComponentChange = (<OnChanges>this._componentRef.instance).ngOnChanges;\r\n\r\n    if (onComponentChange) {\r\n      const change: SimpleChange = {\r\n        previousValue: previousControl,\r\n        currentValue: control,\r\n        firstChange: typeof previousControl === 'undefined',\r\n        isFirstChange: () => change.firstChange\r\n      };\r\n\r\n      onComponentChange.call(componentRenderer, { control: change });\r\n    }\r\n  }\r\n\r\n  onAdd = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    const reference = (<IReferenceField>this.control.field).reference;\r\n\r\n    const form = this.stateService.createForm(this.control.formId, reference.struct, reference.block);\r\n    this.control.value.push(form);\r\n\r\n    const index = this.control.value.controls.indexOf(form);\r\n    const childPath = `${this.control.formPath}.${index}`;\r\n\r\n    if (this.control.layout === 'table') {\r\n      this.stateService.pushNavigation(this.control.formId, reference.struct, reference.block, childPath, this.control.formPath);\r\n    }\r\n\r\n    this.control.onChange(null);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  SimpleChange\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { DeReCrudProviderService } from '../../providers/provider/provider.service';\r\nimport {\r\n  IField,\r\n  IListField,\r\n  ILinkedStructField,\r\n  ILinkedStructFieldReference,\r\n  IFieldReference\r\n} from '../models/schema';\r\nimport { FormGroup, FormArray, AbstractControl } from '@angular/forms';\r\nimport { FormState } from '../models/form-state';\r\nimport { FormStateService } from '../services/form-state.service';\r\nimport {\r\n  ControlRenderer,\r\n  IControl,\r\n  ISelectControl,\r\n  ICollectionControl\r\n} from '../renderers/control.renderer';\r\nimport { ComponentHostDirective } from './component-host.directive';\r\nimport { CollectionFieldHostComponent } from './collection-field-host.component';\r\n\r\n\r\n@Component({\r\n  selector: 'de-re-crud-input-field-host',\r\n  template: `\r\n    <ng-template deReCrudComponentHost></ng-template>`\r\n})\r\nexport class InputFieldHostComponent implements OnInit, OnChanges, OnDestroy {\r\n  private _componentRefs: ComponentRef<any>[] = [];\r\n  private _submissionErrorsChangeSubscription: Subscription;\r\n  private _formChangeSubscription: Subscription;\r\n  private _valueOnFocus: any;\r\n  @ViewChild(ComponentHostDirective) componentHost: ComponentHostDirective;\r\n  @Input() formId: number;\r\n  @Input() form: FormGroup;\r\n  @Input() struct: string;\r\n  @Input() block: string;\r\n  @Input() field: IField;\r\n  @Input() parentForm: AbstractControl;\r\n  @Input() parentPath: string;\r\n  state: FormState;\r\n  fieldReference: IFieldReference;\r\n\r\n  constructor(\r\n    private stateService: FormStateService,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private providerService: DeReCrudProviderService\r\n  ) {\r\n  }\r\n\r\n  get formPath() {\r\n    let formPath = this.field.name;\r\n\r\n    if (this.parentPath) {\r\n      let parentPath = this.parentPath;\r\n\r\n      if (this.parentForm instanceof FormArray) {\r\n        const index = this.parentForm.controls.indexOf(this.form);\r\n        parentPath += '.' + index;\r\n      }\r\n\r\n      formPath = `${parentPath}.${formPath}`;\r\n    }\r\n\r\n    return formPath;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.state = this.stateService.get(this.formId);\r\n\r\n    const fieldReference = this.state.blocks[`${this.struct}-${this.block}`].fields.find(\r\n      x => x.field === this.field.name\r\n    );\r\n\r\n    this.fieldReference = fieldReference;\r\n\r\n    this._submissionErrorsChangeSubscription = this.state.onSubmissionErrorsChange.subscribe(\r\n      () => {\r\n        this.updateInputs();\r\n      }\r\n    );\r\n\r\n    this._formChangeSubscription = this.form.valueChanges.subscribe(\r\n      () => {\r\n        if (!this.shouldRender()) {\r\n          this.destroyRefs();\r\n        } else if (!this._componentRefs.length) {\r\n          this.render();\r\n        } else {\r\n          this.updateInputs();\r\n        }\r\n      }\r\n    );\r\n\r\n    this.render();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.formId && !changes.formId.isFirstChange()) {\r\n      this.ngOnDestroy();\r\n      this.ngOnInit();\r\n      return;\r\n    }\r\n\r\n    this.updateInputs();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._submissionErrorsChangeSubscription) {\r\n      this._submissionErrorsChangeSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this._formChangeSubscription) {\r\n      this._formChangeSubscription.unsubscribe();\r\n    }\r\n\r\n    this.destroyRefs();\r\n  }\r\n\r\n  destroyRefs() {\r\n    if (this._componentRefs.length) {\r\n      this._componentRefs.forEach(x => x.destroy());\r\n      this._componentRefs = [];\r\n    }\r\n  }\r\n\r\n  shouldRender() {\r\n    return this.fieldReference && this.fieldReference.condition(this.form.value, this.state.form.root.value);\r\n  }\r\n\r\n  render() {\r\n    this.destroyRefs();\r\n\r\n    if (!this.shouldRender()) {\r\n      return;\r\n    }\r\n\r\n    let controlComponent: any;\r\n\r\n    const providerOptions = this.providerService.get(\r\n      this.state.options.provider\r\n    );\r\n\r\n    switch (this.field.type) {\r\n      case 'text':\r\n      case 'integer':\r\n      case 'date':\r\n        controlComponent = providerOptions.inputComponent;\r\n        break;\r\n      case 'boolean':\r\n        controlComponent = providerOptions.checkboxComponent;\r\n        break;\r\n      case 'list':\r\n      case 'foreignKey':\r\n        controlComponent = providerOptions.selectComponent;\r\n        break;\r\n      case 'linkedStruct':\r\n        controlComponent = CollectionFieldHostComponent;\r\n        break;\r\n      default:\r\n        console.error(\r\n          `${this.field.type} control is not supported.`,\r\n          JSON.stringify(this.field)\r\n        );\r\n        return;\r\n    }\r\n\r\n    const viewContainerRef = this.componentHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    const containerComponentFactory = this.componentFactoryResolver.resolveComponentFactory(\r\n      providerOptions.containerComponent\r\n    );\r\n\r\n    const controlComponentFactory = this.componentFactoryResolver.resolveComponentFactory(\r\n      controlComponent\r\n    );\r\n\r\n    const controlComponentRef = viewContainerRef.createComponent(\r\n      controlComponentFactory\r\n    );\r\n\r\n    const containerComponentRef = viewContainerRef.createComponent(\r\n      containerComponentFactory,\r\n      0,\r\n      undefined,\r\n      [[controlComponentRef.location.nativeElement]]\r\n    );\r\n\r\n    this._componentRefs.push(controlComponentRef, containerComponentRef);\r\n\r\n    this.updateInputs();\r\n  }\r\n\r\n  updateInputs() {\r\n    if (this.shouldRender() && !this._componentRefs.length) {\r\n      this.render();\r\n      return;\r\n    }\r\n\r\n    if (!this._componentRefs.length) {\r\n      return;\r\n    }\r\n\r\n    const formPath = this.formPath;\r\n    const value = this.form.root.get(formPath);\r\n\r\n    const control: IControl = {\r\n      value,\r\n      formPath,\r\n      field: this.field,\r\n      formId: this.formId,\r\n      submissionErrors:\r\n        (this.state.submissionErrors &&\r\n          this.state.submissionErrors[formPath]) ||\r\n        [],\r\n      form: this.form,\r\n      rendererType: this.mapType(this.field.type),\r\n      htmlId: `${this.formId}-${formPath}`,\r\n      onFocus: this.onFocus,\r\n      onBlur: this.onBlur,\r\n      onChange: this.onChange\r\n    };\r\n\r\n    switch (this.field.type) {\r\n      case 'list':\r\n      case 'foreignKey': {\r\n        const listField = <IListField>this.field;\r\n\r\n        const selectControl = <ISelectControl>control;\r\n\r\n        if (this.field.type === 'foreignKey') {\r\n          selectControl.options = () => [];\r\n        } else {\r\n          selectControl.options = () => listField.options;\r\n        }\r\n        break;\r\n      }\r\n      case 'linkedStruct': {\r\n        const collectionControl = <ICollectionControl>control;\r\n\r\n        const linkedStructField = <ILinkedStructField>this.field;\r\n        const { reference } = linkedStructField;\r\n\r\n        const blockFields = this.state.blocks[`${this.struct}-${this.block}`].fields;\r\n\r\n        const { hints } = <ILinkedStructFieldReference>blockFields.find(\r\n          x => x.field === linkedStructField.name\r\n        );\r\n\r\n        const referenceBlock = (hints && hints.block) || reference.block;\r\n\r\n        const fieldReferences = <ILinkedStructFieldReference[]>this.state\r\n          .blocks[`${reference.struct}-${referenceBlock}`].fields;\r\n\r\n        const nestedFields = [];\r\n\r\n        for (const fieldReference of fieldReferences) {\r\n          const field = this.state.fields[`${reference.struct}-${fieldReference.field}`];\r\n          nestedFields.push(field);\r\n        }\r\n\r\n        const nestedValues = [];\r\n\r\n        for (const nestedValue of collectionControl.value.controls) {\r\n          nestedValues.push(<FormGroup>nestedValue);\r\n        }\r\n\r\n        collectionControl.stamp = {\r\n          text: control.field.label,\r\n          headerSize: this.state.options.headerSize\r\n        };\r\n\r\n        collectionControl.canAdd = !linkedStructField.maxInstances || nestedValues.length < linkedStructField.maxInstances;\r\n        collectionControl.nestedValues = nestedValues;\r\n        collectionControl.nestedFields = nestedFields;\r\n        collectionControl.layout = (hints && hints.layout) || 'inline';\r\n        break;\r\n      }\r\n    }\r\n\r\n    for (const componentRef of this._componentRefs) {\r\n      const componentRenderer = <ControlRenderer>componentRef.instance;\r\n\r\n      const previousControl = componentRenderer.control;\r\n      componentRenderer.control = control;\r\n\r\n      const onComponentChange = (<OnChanges>componentRef.instance).ngOnChanges;\r\n      if (onComponentChange) {\r\n        const change: SimpleChange = {\r\n          previousValue: previousControl,\r\n          currentValue: control,\r\n          firstChange: typeof previousControl === 'undefined',\r\n          isFirstChange: () => change.firstChange\r\n        };\r\n\r\n        onComponentChange.call(componentRenderer, { control: change });\r\n      }\r\n    }\r\n  }\r\n\r\n  onFocus = () => {\r\n    this._valueOnFocus = this.form.root.get(this.formPath).value;\r\n  }\r\n\r\n  onBlur = () => {\r\n    const newValue = this.form.root.get(this.formPath).value;\r\n\r\n    if (this._valueOnFocus !== newValue) {\r\n      this.stateService.onChange(this.formId, this.formPath, newValue, 'blur');\r\n    }\r\n  }\r\n\r\n  onChange = (e: any) => {\r\n    const newValue = this.form.root.get(this.formPath).value;\r\n    this.stateService.onChange(this.formId, this.formPath, newValue, e ? 'change' : null);\r\n  }\r\n\r\n  private mapType(type: string) {\r\n    switch (type) {\r\n      case 'integer':\r\n        return 'number';\r\n      default:\r\n        return type;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { DeReCrudProviderService } from '../../providers/provider/provider.service';\r\nimport { FormState } from '../models/form-state';\r\nimport { ButtonRenderer } from '../renderers/button.renderer';\r\nimport { FormStateService } from '../services/form-state.service';\r\nimport { ComponentHostDirective } from './component-host.directive';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-button-host',\r\n  template: `<ng-template deReCrudComponentHost></ng-template>`\r\n})\r\nexport class ButtonHostComponent implements OnInit, OnChanges, OnDestroy {\r\n  private _componentRef: ComponentRef<any>;\r\n  @ViewChild(ComponentHostDirective) componentHost: ComponentHostDirective;\r\n  @Input() formId: number;\r\n  @Input() type: 'button' | 'submit' | 'cancel';\r\n  @Input() extraClasses: string | string[];\r\n  @Input() text: string;\r\n  @Input() disabled: boolean;\r\n  @Output() click = new EventEmitter<any>();\r\n  state: FormState;\r\n\r\n  constructor(\r\n    private stateService: FormStateService,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private providerService: DeReCrudProviderService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.state = this.stateService.get(this.formId);\r\n    this.render();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.formId && !changes.formId.isFirstChange()) {\r\n      this.ngOnDestroy();\r\n      this.ngOnInit();\r\n      return;\r\n    }\r\n\r\n    this.updateInputs();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._componentRef) {\r\n      this._componentRef.destroy();\r\n      this._componentRef = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this._componentRef) {\r\n      this._componentRef.destroy();\r\n      this._componentRef = null;\r\n    }\r\n\r\n    const providerOptions = this.providerService.get(\r\n      this.state.options.provider\r\n    );\r\n\r\n    const viewContainerRef = this.componentHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\r\n      providerOptions.buttonComponent\r\n    );\r\n\r\n    this._componentRef = viewContainerRef.createComponent(componentFactory);\r\n\r\n    this.updateInputs();\r\n  }\r\n\r\n  updateInputs() {\r\n    if (!this._componentRef) {\r\n      return;\r\n    }\r\n\r\n    const {\r\n      options: { struct, submitButtonStyle, cancelButtonStyle },\r\n      structs\r\n    } = this.state;\r\n\r\n    const isSubmit = this.type === 'submit';\r\n\r\n    let style = null;\r\n\r\n    switch (this.type) {\r\n      case 'submit':\r\n        style = submitButtonStyle;\r\n        break;\r\n      case 'cancel':\r\n        style = cancelButtonStyle;\r\n        break;\r\n    }\r\n\r\n    let text = (style && style.text) || this.text;\r\n\r\n    if (\r\n      isSubmit &&\r\n      submitButtonStyle &&\r\n      submitButtonStyle.appendSchemaLabel\r\n    ) {\r\n      text = `${text} ${structs[struct].label}`;\r\n    }\r\n\r\n    const extraClasses = [];\r\n\r\n    if (this.state.options.extraButtonClasses) {\r\n      extraClasses.push(...this.state.options.extraButtonClasses);\r\n    }\r\n\r\n    if (this.extraClasses) {\r\n      if (typeof this.extraClasses === 'string') {\r\n        extraClasses.push(...this.extraClasses.split(' '));\r\n      } else {\r\n        extraClasses.push(...this.extraClasses);\r\n      }\r\n    }\r\n\r\n    const componentRenderer = <ButtonRenderer>this._componentRef.instance;\r\n    componentRenderer.button = {\r\n      text,\r\n      extraClasses,\r\n      type: isSubmit ? 'submit' : 'button',\r\n      disabled: this.disabled,\r\n      onClick: this.onClick,\r\n      class: (style && style.class) || undefined\r\n    };\r\n  }\r\n\r\n  onClick = (e) => {\r\n    this.click.emit(e);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ComponentRef,\r\n  ViewChild,\r\n  Input,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  ComponentFactoryResolver,\r\n  SimpleChanges,\r\n  SimpleChange\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { DeReCrudProviderService } from '../../providers/provider/provider.service';\r\nimport { IField, IFieldReference, IStampField } from '../models/schema';\r\nimport { FormStateService } from '../services/form-state.service';\r\nimport { StampRenderer, IStamp } from '../renderers/stamp.renderer';\r\nimport { FormState } from '../models/form-state';\r\nimport { ComponentHostDirective } from './component-host.directive';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-stamp-field-host',\r\n  template: `<ng-template deReCrudComponentHost></ng-template>`\r\n})\r\nexport class StampFieldHostComponent implements OnInit, OnChanges, OnDestroy {\r\n  private _componentRef: ComponentRef<any>;\r\n  @ViewChild(ComponentHostDirective) componentHost: ComponentHostDirective;\r\n  @Input() formId: number;\r\n  @Input() form: FormGroup;\r\n  @Input() struct: string;\r\n  @Input() block: string;\r\n  @Input() field: IField;\r\n  state: FormState;\r\n  fieldReference: IFieldReference;\r\n\r\n  constructor(\r\n    private stateService: FormStateService,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private providerService: DeReCrudProviderService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.state = this.stateService.get(this.formId);\r\n\r\n    const fieldReference = this.state.blocks[\r\n      `${this.struct}-${this.block}`\r\n    ].fields.find(x => x.field === this.field.name);\r\n\r\n    this.fieldReference = fieldReference;\r\n\r\n    this.render();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.formId && !changes.formId.isFirstChange()) {\r\n      this.ngOnDestroy();\r\n      this.ngOnInit();\r\n      return;\r\n    }\r\n\r\n    this.updateInputs();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._componentRef) {\r\n      this._componentRef.destroy();\r\n      this._componentRef = null;\r\n    }\r\n  }\r\n\r\n  shouldRender() {\r\n    return this.fieldReference.condition(\r\n      this.form.value,\r\n      this.state.form.root.value\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this._componentRef) {\r\n      this._componentRef.destroy();\r\n      this._componentRef = null;\r\n    }\r\n\r\n    if (!this.shouldRender()) {\r\n      return;\r\n    }\r\n\r\n    let controlComponent: any;\r\n\r\n    const providerOptions = this.providerService.get(\r\n      this.state.options.provider\r\n    );\r\n\r\n    switch (this.field.type) {\r\n      case 'stamp':\r\n        controlComponent = providerOptions.stampComponent;\r\n        break;\r\n      default:\r\n        console.error(\r\n          `${this.field.type} control is not supported.`,\r\n          JSON.stringify(this.field)\r\n        );\r\n        return;\r\n    }\r\n\r\n    const viewContainerRef = this.componentHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\r\n      controlComponent\r\n    );\r\n\r\n    this._componentRef = viewContainerRef.createComponent(componentFactory);\r\n\r\n    this.updateInputs();\r\n  }\r\n\r\n  updateInputs() {\r\n    if (!this._componentRef) {\r\n      return;\r\n    }\r\n\r\n    const componentRenderer = <StampRenderer>this._componentRef.instance;\r\n    const stampField = <IStampField>this.field;\r\n\r\n    const stamp: IStamp = {\r\n      text: stampField.label,\r\n      headerSize: this.state.options.headerSize\r\n    };\r\n\r\n    if (stampField.hints) {\r\n      if (stampField.hints.headerSize) {\r\n        stamp.headerSize = stampField.hints.headerSize;\r\n      }\r\n\r\n      if (stampField.hints.displayClassNames) {\r\n        stamp.classes = stampField.hints.displayClassNames;\r\n      }\r\n    }\r\n\r\n    const previousStamp = componentRenderer.stamp;\r\n    componentRenderer.stamp = stamp;\r\n\r\n    const onComponentChange = (<OnChanges>this._componentRef.instance)\r\n      .ngOnChanges;\r\n\r\n    if (onComponentChange) {\r\n      const change: SimpleChange = {\r\n        previousValue: previousStamp,\r\n        currentValue: stamp,\r\n        firstChange: typeof previousStamp === 'undefined',\r\n        isFirstChange: () => change.firstChange\r\n      };\r\n\r\n      onComponentChange.call(componentRenderer, { control: change });\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, SimpleChanges, OnChanges, OnInit } from '@angular/core';\r\nimport { FormGroup, AbstractControl } from '@angular/forms';\r\nimport { IField } from '../../models/schema';\r\nimport { FormState } from '../../models/form-state';\r\nimport { FormStateService } from '../../services/form-state.service';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-form-host',\r\n  template: `<ng-container *ngFor=\"let field of fields\">\r\n  <ng-container [ngSwitch]=\"field.type\">\r\n    <de-re-crud-stamp-field-host\r\n      *ngSwitchCase=\"'stamp'\"\r\n      [formId]=\"formId\"\r\n      [form]=\"form\"\r\n      [field]=\"field\"\r\n      [struct]=\"struct\"\r\n      [block]=\"block\">\r\n    </de-re-crud-stamp-field-host>\r\n    <de-re-crud-input-field-host\r\n      *ngSwitchDefault\r\n      [formId]=\"formId\"\r\n      [form]=\"form\"\r\n      [parentPath]=\"parentPath\"\r\n      [parentForm]=\"parentForm\"\r\n      [field]=\"field\"\r\n      [struct]=\"struct\"\r\n      [block]=\"block\">\r\n    </de-re-crud-input-field-host>\r\n  </ng-container>\r\n</ng-container>\r\n`\r\n})\r\nexport class FormHostComponent implements OnInit, OnChanges {\r\n  private _struct: string;\r\n  private _block: string;\r\n\r\n  @Input() formId: number;\r\n  @Input() form: FormGroup;\r\n  @Input() fields: IField[];\r\n  @Input() parentForm: AbstractControl;\r\n  @Input() parentPath: string;\r\n  state: FormState;\r\n\r\n  constructor(\r\n    private stateService: FormStateService\r\n  ) {}\r\n\r\n  get struct() {\r\n    return this._struct || this.state.options.struct;\r\n  }\r\n\r\n  @Input()\r\n  set struct(value: string) {\r\n    this._struct = value;\r\n  }\r\n\r\n  get block() {\r\n    return this._block || this.state.options.block;\r\n  }\r\n\r\n  @Input()\r\n  set block(value: string) {\r\n    this._block = value;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.state = this.stateService.get(this.formId);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.formId && !changes.formId.isFirstChange()) {\r\n      this.ngOnInit();\r\n      return;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ComponentHostDirective } from './hosts/component-host.directive';\r\nimport { InputFieldHostComponent } from './hosts/input-field-host.component';\r\nimport { ButtonHostComponent } from './hosts/button-host.component';\r\nimport { FormBuilderService } from './services/form-builder.service';\r\nimport { FormStateService } from './services/form-state.service';\r\nimport { CollectionFieldHostComponent } from './hosts/collection-field-host.component';\r\nimport { StampFieldHostComponent } from './hosts/stamp-field-host.component';\r\nimport { FormHostComponent } from './hosts/form-host/form-host.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    ComponentHostDirective,\r\n    InputFieldHostComponent,\r\n    StampFieldHostComponent,\r\n    ButtonHostComponent,\r\n    CollectionFieldHostComponent,\r\n    FormHostComponent\r\n  ],\r\n  providers: [FormStateService, FormBuilderService],\r\n  exports: [InputFieldHostComponent, StampFieldHostComponent, ButtonHostComponent, FormHostComponent],\r\n  entryComponents: [CollectionFieldHostComponent]\r\n})\r\nexport class DeReCrudCoreModule { }\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormStateService } from '../../core/services/form-state.service';\r\nimport { DeReCrudOptions } from '../../core/models/options';\r\nimport { IField } from '../../core/models/schema';\r\nimport { FormSubmission, FormSubmissionErrors } from '../../core/models/form-submission';\r\nimport { FormChange } from '../../core/models/form-change';\r\nimport { FormState } from '../../core/models/form-state';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-form',\r\n  template: `<form *ngIf=\"state.form\" [formGroup]=\"state.form\">\r\n  <de-re-crud-form-host [formId]=\"state.id\"\r\n                        [form]=\"form\"\r\n                        [struct]=\"struct\"\r\n                        [block]=\"block\"\r\n                        [parentPath]=\"parentPath\"\r\n                        [parentForm]=\"parentForm\"\r\n                        [fields]=\"fields\">\r\n  </de-re-crud-form-host>\r\n  <de-re-crud-button-host type=\"submit\"\r\n                          [formId]=\"state.id\"\r\n                          [disabled]=\"!submitEnabled\"\r\n                          text=\"Submit\"\r\n                          (click)=\"onSubmit($event)\">\r\n  </de-re-crud-button-host>\r\n  <de-re-crud-button-host *ngIf=\"cancelVisible\"\r\n                          type=\"cancel\"\r\n                          [formId]=\"state.id\"\r\n                          [disabled]=\"!cancelEnabled\"\r\n                          text=\"Cancel\"\r\n                          (click)=\"onCancel($event)\">\r\n  </de-re-crud-button-host>\r\n</form>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class FormComponent implements OnInit, OnChanges, OnDestroy {\r\n  private _navigationChangeSubscription: Subscription;\r\n  private _formChangeSubscription: Subscription;\r\n  private _cancelVisible: boolean;\r\n\r\n  @Input() options: DeReCrudOptions;\r\n  @Input() value: object;\r\n  @Input() errors: FormSubmissionErrors;\r\n  @Output() valueChange = new EventEmitter<FormChange>();\r\n  @Output() submit = new EventEmitter<FormSubmission>();\r\n  @Output() cancel = new EventEmitter<any>();\r\n\r\n  fields: IField[];\r\n  state: FormState;\r\n  submitting: boolean;\r\n\r\n  constructor(private stateService: FormStateService) {}\r\n\r\n  get cancelVisible() {\r\n    return !!this.state.navigationStack.length || this._cancelVisible;\r\n  }\r\n\r\n  @Input()\r\n  set cancelVisible(value: boolean) {\r\n    this._cancelVisible = value;\r\n  }\r\n\r\n  get submitEnabled() {\r\n    return !this.submitting && this.form.valid;\r\n  }\r\n\r\n  get cancelEnabled() {\r\n    return !this.submitting;\r\n  }\r\n\r\n  get struct() {\r\n    const { navigationStack } = this.state;\r\n    const navigationStackCount = navigationStack.length;\r\n\r\n    return navigationStackCount\r\n      ? navigationStack[navigationStackCount - 1].struct\r\n      : this.state.options.struct;\r\n  }\r\n\r\n  get block() {\r\n    const { navigationStack } = this.state;\r\n    const navigationStackCount = navigationStack.length;\r\n\r\n    return navigationStackCount\r\n      ? navigationStack[navigationStackCount - 1].block\r\n      : this.state.options.block;\r\n  }\r\n\r\n  get form() {\r\n    const { navigationStack } = this.state;\r\n    const navigationStackCount = navigationStack.length;\r\n\r\n    return navigationStackCount\r\n      ? this.state.form.get(navigationStack[navigationStackCount - 1].path)\r\n      : this.state.form;\r\n  }\r\n\r\n  get parentPath() {\r\n    const { navigationStack } = this.state;\r\n    const navigationStackCount = navigationStack.length;\r\n\r\n    return navigationStackCount\r\n      ? navigationStack[navigationStackCount - 1].parentPath\r\n      : null;\r\n  }\r\n\r\n  get parentForm(): (AbstractControl | null) {\r\n    const { navigationStack } = this.state;\r\n    const navigationStackCount = navigationStack.length;\r\n\r\n    return navigationStackCount\r\n      ? this.state.form.get(navigationStack[navigationStackCount - 1].parentPath)\r\n      : null;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.state = this.stateService.create(this.options, this.value, this.errors);\r\n    this.update();\r\n\r\n    this._navigationChangeSubscription = this.state.onNavigationChange.subscribe(() => {\r\n      this.update();\r\n    });\r\n\r\n    this._formChangeSubscription = this.state.onValueChange.subscribe((change) => {\r\n      this.valueChange.emit(change);\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value && !changes.value.firstChange) {\r\n      this.stateService.update(this.state.id, changes.value.currentValue);\r\n    }\r\n\r\n    if (changes.errors && !changes.errors.firstChange) {\r\n      this.stateService.setErrors(this.state.id, changes.errors.currentValue);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._navigationChangeSubscription) {\r\n      this._navigationChangeSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this._formChangeSubscription) {\r\n      this._formChangeSubscription.unsubscribe();\r\n    }\r\n\r\n    this.stateService.remove(this.state.id);\r\n  }\r\n\r\n  update() {\r\n    const { options, navigationStack } = this.state;\r\n\r\n    let struct;\r\n    let block;\r\n\r\n    const child = navigationStack[navigationStack.length - 1];\r\n    if (child) {\r\n      ({ struct, block } = child);\r\n    } else {\r\n      ({ struct, block } = options);\r\n    }\r\n\r\n    const blockFields = this.getBlockFields(struct, block);\r\n\r\n    this.fields = blockFields;\r\n  }\r\n\r\n  getBlockFields(struct: string, blockName: string) {\r\n    const { blocks, fields } = this.state;\r\n    if (!blocks || !fields) {\r\n       // TODO: Log error\r\n      return [];\r\n    }\r\n\r\n    const block = blocks[`${struct}-${blockName}`];\r\n\r\n    if (!block) {\r\n      // TODO: Log error\r\n      return [];\r\n    }\r\n\r\n    const references = block.fields;\r\n\r\n    const blockFields = [];\r\n\r\n    for (const reference of references) {\r\n      blockFields.push(fields[`${struct}-${reference.field}`]);\r\n    }\r\n\r\n    return blockFields;\r\n  }\r\n\r\n  onCancel(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    if (!this.cancelEnabled) {\r\n      return;\r\n    }\r\n\r\n    if (this.state.navigationStack.length) {\r\n      this.stateService.popNavigation(this.state.id);\r\n      return;\r\n    }\r\n\r\n    this.cancel.emit();\r\n    this.state.form.reset();\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    if (!this.submitEnabled) {\r\n      return;\r\n    }\r\n\r\n    if (this.state.navigationStack.length) {\r\n      this.stateService.completeNavigation(this.state.id);\r\n      return;\r\n    }\r\n\r\n    this.submitting = true;\r\n\r\n    this.submit.emit({\r\n      value: this.state.form.value,\r\n      onComplete: (errors) => {\r\n        if (!errors) {\r\n          this.stateService.clearErrors(this.state.id);\r\n          this.state.form.reset();\r\n        } else {\r\n          this.stateService.setErrors(this.state.id, errors);\r\n        }\r\n\r\n        this.submitting = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { DeReCrudCoreModule } from '../core/core.module';\r\nimport { FormComponent } from './form/form.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DeReCrudCoreModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    FormComponent\r\n  ],\r\n  exports: [FormComponent]\r\n})\r\nexport class DeReCrudFormsModule { }\r\n","import { IControl } from './renderers/control.renderer';\r\n\r\n// @dynamic\r\nexport class ValidationErrorHelper {\r\n  private static _errorSort = ['required'];\r\n\r\n  private static getFormControlIfErrorFound(control: IControl) {\r\n    const formControl = control.form.get(control.field.name);\r\n\r\n    if (\r\n      (!formControl.errors || !formControl.touched) &&\r\n      !control.submissionErrors.length\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    return formControl;\r\n  }\r\n\r\n  static hasError(control: IControl) {\r\n    return !!this.getFormControlIfErrorFound(control);\r\n  }\r\n\r\n  static getErrors(control: IControl) {\r\n    const formControl = this.getFormControlIfErrorFound(control);\r\n    if (!formControl) {\r\n      return null;\r\n    }\r\n\r\n    const sortedErrors = [];\r\n    const unsortedErrors = [];\r\n\r\n    if (formControl.errors && formControl.touched) {\r\n      for (const key of Object.keys(formControl.errors)) {\r\n        const sort = this._errorSort[key];\r\n        const metadata = formControl.errors[key];\r\n\r\n        if (typeof sort === 'undefined') {\r\n          unsortedErrors.push({ key, metadata });\r\n        } else {\r\n          sortedErrors.push({ key, metadata, sort });\r\n        }\r\n      }\r\n    }\r\n\r\n    return sortedErrors\r\n      .sort(x => x.sort)\r\n      .concat(unsortedErrors)\r\n      .map(this.getErrorMessage)\r\n      .concat(control.submissionErrors);\r\n  }\r\n\r\n  static getErrorMessage(error: { key: string; metadata: any }) {\r\n    switch (error.key) {\r\n      case 'required':\r\n        return 'This field is required.';\r\n      case 'minlength':\r\n        return `This field must have at least ${\r\n          error.metadata.requiredLength\r\n        } characters.`;\r\n      case 'maxlength':\r\n        return `This field can not exceed ${\r\n          error.metadata.requiredLength\r\n        } characters.`;\r\n      default:\r\n        return `Validation failed with error: ${error}`;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlRenderer, IControl } from '../../../core/renderers/control.renderer';\r\nimport { ValidationErrorHelper } from '../../../core/validation-error-helper';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-control-container-renderer',\r\n  template: `<div class=\"form-group\" [ngClass]=\"getClasses()\">\r\n  <ng-content></ng-content>\r\n</div>\r\n`\r\n})\r\nexport class Bootstrap3ControlContainerRendererComponent implements ControlRenderer {\r\n  @Input() control: IControl;\r\n\r\n  getClasses() {\r\n    const hasError = ValidationErrorHelper.hasError(this.control);\r\n\r\n    return {\r\n      'has-error': hasError,\r\n      'has-feedback': hasError\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DeReCrudProviderService } from './provider.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [DeReCrudProviderService],\r\n  declarations: []\r\n})\r\nexport class DeReCrudProviderModule {}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlRenderer, IControl } from '../../../core/renderers/control.renderer';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-input-renderer',\r\n  template: `<ng-container [formGroup]=\"control.form\">\r\n  <de-re-crud-bootstrap3-label-renderer [control]=\"control\">\r\n  </de-re-crud-bootstrap3-label-renderer>\r\n  <input class=\"form-control\"\r\n         [type]=\"control.rendererType\"\r\n         [id]=\"control.htmlId\"\r\n         [name]=\"control.field.name\"\r\n         [formControlName]=\"control.field.name\"\r\n         (focus)=\"control.onFocus($event)\"\r\n         (blur)=\"control.onBlur($event)\"\r\n         (input)=\"control.onChange($event)\" />\r\n  <de-re-crud-bootstrap3-help-renderer [control]=\"control\">\r\n  </de-re-crud-bootstrap3-help-renderer>\r\n  <de-re-crud-bootstrap3-validation-errors-renderer [control]=\"control\">\r\n  </de-re-crud-bootstrap3-validation-errors-renderer>\r\n</ng-container>\r\n`\r\n})\r\nexport class Bootstrap3InputRendererComponent implements ControlRenderer {\r\n  @Input() control: IControl;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlRenderer, ISelectControl } from '../../../core/renderers/control.renderer';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-select-renderer',\r\n  template: `<ng-container [formGroup]=\"control.form\">\r\n  <de-re-crud-bootstrap3-label-renderer [control]=\"control\"></de-re-crud-bootstrap3-label-renderer>\r\n  <select class=\"form-control\"\r\n          [id]=\"control.htmlId\"\r\n          [name]=\"control.field.name\"\r\n          [formControlName]=\"control.field.name\"\r\n          (focus)=\"control.onFocus($event)\"\r\n          (blur)=\"control.onBlur($event)\"\r\n          (change)=\"control.onChange($event)\">\r\n    <option *ngFor=\"let option of control.options\" [value]=\"option.value\">{{option.label}}</option>\r\n  </select>\r\n  <de-re-crud-bootstrap3-help-renderer [control]=\"control\">\r\n  </de-re-crud-bootstrap3-help-renderer>\r\n  <de-re-crud-bootstrap3-validation-errors-renderer [control]=\"control\">\r\n  </de-re-crud-bootstrap3-validation-errors-renderer>\r\n</ng-container>\r\n`\r\n})\r\nexport class Bootstrap3SelectRendererComponent implements ControlRenderer {\r\n  @Input() control: ISelectControl;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlRenderer, IControl } from '../../../core/renderers/control.renderer';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-label-renderer',\r\n  template: `<label class=\"control-label\" [htmlFor]=\"control.htmlId\">{{control.field.label}}</label>\r\n`\r\n})\r\nexport class Bootstrap3LabelRendererComponent implements ControlRenderer {\r\n  @Input() control: IControl;\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  Input,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { ButtonRenderer, IButton } from '../../../core/renderers/button.renderer';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-button-renderer',\r\n  template: `<button class=\"btn\" [ngClass]=\"classes\"\r\n        [type]=\"button.type\"\r\n        [disabled]=\"button.disabled\"\r\n        (click)=\"button.onClick($event)\">\r\n  {{button.text}}\r\n</button>\r\n`\r\n})\r\nexport class Bootstrap3ButtonRendererComponent implements OnInit, OnChanges, ButtonRenderer {\r\n  @Input() button: IButton;\r\n  _classes: string[];\r\n\r\n  get classes() {\r\n    let classes: string[];\r\n\r\n    if (this._classes) {\r\n      classes = this._classes;\r\n    }\r\n\r\n    if (this.button.extraClasses) {\r\n      classes = (classes || []).concat(this.button.extraClasses);\r\n    }\r\n\r\n    return classes;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateClasses();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.button) {\r\n      if (\r\n        changes.button.currentValue.type !==\r\n        changes.button.previousValue.type\r\n      ) {\r\n        this.updateClasses();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateClasses() {\r\n    if (this.button.class) {\r\n      this._classes = [this.button.class];\r\n      return;\r\n    }\r\n\r\n    switch (this.button.type) {\r\n      case 'submit':\r\n        this._classes = ['btn-primary'];\r\n        break;\r\n      default:\r\n        this._classes = ['btn-default'];\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { CollectionControlRenderer, ICollectionControl } from '../../../core/renderers/control.renderer';\r\nimport { IField } from '../../../core/models/schema';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-table-renderer',\r\n  template: `<div>\r\n  <de-re-crud-stamp-renderer [stamp]=\"control.stamp\">\r\n  </de-re-crud-stamp-renderer>\r\n  <de-re-crud-button-host\r\n    [formId]=\"control.formId\"\r\n    extraClasses=\"btn-sm\"\r\n    text=\"Add\"\r\n    (click)=\"control.onAdd($event)\">\r\n  </de-re-crud-button-host>\r\n</div>\r\n\r\n<div class=\"table-control-container\">\r\n  <table class=\"table table-bordered table-condensed\">\r\n    <thead>\r\n      <tr>\r\n        <th *ngFor=\"let field of control.nestedFields\">\r\n          {{field.label}}\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngIf=\"!control.nestedValues.length\">\r\n        <td colspan=\"100%\">None</td>\r\n      </tr>\r\n      <tr *ngFor=\"let form of control.nestedValues\">\r\n        <td *ngFor=\"let field of control.nestedFields\" [innerHtml]=\"getValue(field, form.value)\"></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n`,\r\n  styles: [`.table-control-container{margin-top:10px}`]\r\n})\r\nexport class Bootstrap3TableRendererComponent implements CollectionControlRenderer {\r\n  @Input() control: ICollectionControl;\r\n\r\n  getValue(field: IField, value: any) {\r\n    const fieldValue = value[field.name];\r\n\r\n    if (fieldValue == null || typeof fieldValue === 'undefined') {\r\n      return '&nbsp;';\r\n    }\r\n\r\n    return fieldValue;\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlRenderer, IControl } from '../../../core/renderers/control.renderer';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-checkbox-renderer',\r\n  template: `<ng-container [formGroup]=\"control.form\">\r\n  <div class=\"checkbox\">\r\n    <label [htmlFor]=\"control.htmlId\">\r\n      <input type=\"checkbox\"\r\n        [id]=\"control.htmlId\"\r\n        [name]=\"control.field.name\"\r\n        [formControlName]=\"control.field.name\"\r\n        (focus)=\"control.onFocus($event)\"\r\n        (blur)=\"control.onBlur($event)\"\r\n        (input)=\"control.onChange($event)\" /> {{control.field.label}}\r\n    </label>\r\n  </div>\r\n  <de-re-crud-bootstrap3-help-renderer [control]=\"control\">\r\n  </de-re-crud-bootstrap3-help-renderer>\r\n  <de-re-crud-bootstrap3-validation-errors-renderer [control]=\"control\">\r\n  </de-re-crud-bootstrap3-validation-errors-renderer>\r\n</ng-container>\r\n`\r\n})\r\nexport class Bootstrap3CheckboxRendererComponent implements ControlRenderer {\r\n  @Input() control: IControl;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { SelectControlRenderer, ISelectControl } from '../../../core/renderers/control.renderer';\r\nimport { ValidationErrorHelper } from '../../../core/validation-error-helper';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-help-renderer',\r\n  template: `<p *ngIf=\"control.field.help && !hasError()\" class=\"help-block\">{{control.field.help}}</p>\r\n`\r\n})\r\nexport class Bootstrap3HelpRendererComponent implements SelectControlRenderer {\r\n  @Input() control: ISelectControl;\r\n\r\n  hasError() {\r\n    return ValidationErrorHelper.hasError(this.control);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlRenderer, IControl } from '../../../core/renderers/control.renderer';\r\nimport { ValidationErrorHelper } from '../../../core/validation-error-helper';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-validation-errors-renderer',\r\n  template: `<ng-container *ngIf=\"hasError()\"\r\n  [ngTemplateOutlet]=\"validationErrors\"\r\n  [ngTemplateOutletContext]=\"{ errors: getErrors() }\">\r\n</ng-container>\r\n\r\n<ng-template #validationErrors let-errors=\"errors\">\r\n  <ng-container>\r\n    <p *ngFor=\"let error of errors\" class=\"help-block\">\r\n      {{error}}\r\n    </p>\r\n  </ng-container>\r\n</ng-template>\r\n`\r\n})\r\nexport class Bootstrap3ValidationErrorsRendererComponent implements ControlRenderer {\r\n  @Input() control: IControl;\r\n\r\n  hasError() {\r\n    return ValidationErrorHelper.hasError(this.control);\r\n  }\r\n\r\n  getErrors() {\r\n    return ValidationErrorHelper.getErrors(this.control);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { CollectionControlRenderer, ICollectionControl } from '../../../core/renderers/control.renderer';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-bootstrap3-inline-renderer',\r\n  template: `<div>\r\n  <de-re-crud-stamp-renderer [stamp]=\"control.stamp\">\r\n  </de-re-crud-stamp-renderer>\r\n  <de-re-crud-button-host\r\n    *ngIf=\"control.canAdd\"\r\n    [formId]=\"control.formId\"\r\n    extraClasses=\"btn-sm\"\r\n    text=\"Add\"\r\n    (click)=\"control.onAdd($event)\">\r\n  </de-re-crud-button-host>\r\n</div>\r\n\r\n<div class=\"inline-control-container\">\r\n  <span *ngIf=\"!control.nestedValues.length\">None</span>\r\n  <div *ngFor=\"let value of control.nestedValues\">\r\n    <de-re-crud-form-host\r\n      [formId]=\"control.formId\"\r\n      [form]=\"value\"\r\n      [parentPath]=\"control.formPath\"\r\n      [parentForm]=\"control.value\"\r\n      [fields]=\"control.nestedFields\"\r\n      [struct]=\"control.field.reference.struct\"\r\n      [block]=\"control.field.reference.block\">\r\n    </de-re-crud-form-host>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`.inline-control-container{margin-top:10px;margin-bottom:10px}`]\r\n})\r\nexport class Bootstrap3InlineRendererComponent implements CollectionControlRenderer {\r\n  control: ICollectionControl;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { StampRenderer, IStamp } from '../../../core/renderers/stamp.renderer';\r\n\r\n@Component({\r\n  selector: 'de-re-crud-stamp-renderer',\r\n  template: `<ng-container [ngSwitch]=\"stamp.headerSize\">\r\n  <h1 *ngSwitchCase=\"1\" [ngClass]=\"stamp.classes\">{{stamp.text}}</h1>\r\n  <h2 *ngSwitchCase=\"2\" [ngClass]=\"stamp.classes\">{{stamp.text}}</h2>\r\n  <h3 *ngSwitchCase=\"3\" [ngClass]=\"stamp.classes\">{{stamp.text}}</h3>\r\n  <h4 *ngSwitchCase=\"4\" [ngClass]=\"stamp.classes\">{{stamp.text}}</h4>\r\n  <h5 *ngSwitchCase=\"5\" [ngClass]=\"stamp.classes\">{{stamp.text}}</h5>\r\n  <h6 *ngSwitchCase=\"6\" [ngClass]=\"stamp.classes\">{{stamp.text}}</h6>\r\n  <p *ngSwitchDefault [ngClass]=\"stamp.classes\">{{stamp.text}}</p>\r\n</ng-container>\r\n`\r\n})\r\nexport class Bootstrap3StampRendererComponent implements StampRenderer {\r\n  @Input() stamp: IStamp;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { Bootstrap3ControlContainerRendererComponent } from './control-container-renderer/control-container-renderer.component';\r\nimport { DeReCrudCoreModule } from '../../core/core.module';\r\nimport { DeReCrudProviderModule } from '../provider/provider.module';\r\nimport { DeReCrudProviderService } from '../provider/provider.service';\r\nimport { Bootstrap3InputRendererComponent } from './input-renderer/input-renderer.component';\r\nimport { Bootstrap3SelectRendererComponent } from './select-renderer/select-renderer.component';\r\nimport { Bootstrap3LabelRendererComponent } from './label-renderer/label-renderer.component';\r\nimport { Bootstrap3ButtonRendererComponent } from './button-renderer/button-renderer.component';\r\nimport { Bootstrap3TableRendererComponent } from './table-renderer/table-renderer.component';\r\nimport { Bootstrap3CheckboxRendererComponent } from './checkbox-renderer/checkbox-renderer.component';\r\nimport { Bootstrap3HelpRendererComponent } from './help-renderer/help-renderer.component';\r\nimport { Bootstrap3ValidationErrorsRendererComponent } from './validation-errors-renderer/validation-errors-renderer.component';\r\nimport { Bootstrap3InlineRendererComponent } from './inline-renderer/inline-renderer.component';\r\nimport { Bootstrap3StampRendererComponent } from './stamp-renderer/stamp-renderer.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, DeReCrudCoreModule, DeReCrudProviderModule],\r\n  declarations: [\r\n    Bootstrap3ControlContainerRendererComponent,\r\n    Bootstrap3InputRendererComponent,\r\n    Bootstrap3SelectRendererComponent,\r\n    Bootstrap3LabelRendererComponent,\r\n    Bootstrap3ButtonRendererComponent,\r\n    Bootstrap3InlineRendererComponent,\r\n    Bootstrap3TableRendererComponent,\r\n    Bootstrap3CheckboxRendererComponent,\r\n    Bootstrap3HelpRendererComponent,\r\n    Bootstrap3ValidationErrorsRendererComponent,\r\n    Bootstrap3StampRendererComponent\r\n  ],\r\n  entryComponents: [\r\n    Bootstrap3ControlContainerRendererComponent,\r\n    Bootstrap3InputRendererComponent,\r\n    Bootstrap3SelectRendererComponent,\r\n    Bootstrap3ButtonRendererComponent,\r\n    Bootstrap3InlineRendererComponent,\r\n    Bootstrap3TableRendererComponent,\r\n    Bootstrap3CheckboxRendererComponent,\r\n    Bootstrap3StampRendererComponent\r\n  ]\r\n})\r\nexport class Bootstrap3DeReCrudProviderModule {\r\n  constructor(providerService: DeReCrudProviderService) {\r\n    providerService.register('bootstrap3', {\r\n      stampComponent: Bootstrap3StampRendererComponent,\r\n      containerComponent: Bootstrap3ControlContainerRendererComponent,\r\n      inputComponent: Bootstrap3InputRendererComponent,\r\n      selectComponent: Bootstrap3SelectRendererComponent,\r\n      buttonComponent: Bootstrap3ButtonRendererComponent,\r\n      tableComponent: Bootstrap3TableRendererComponent,\r\n      inlineComponent: Bootstrap3InlineRendererComponent,\r\n      checkboxComponent: Bootstrap3CheckboxRendererComponent\r\n    });\r\n  }\r\n}\r\n"],"names":["tslib_1.__values"],"mappings":"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"}
